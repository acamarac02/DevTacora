"use strict";(self.webpackChunkpmdm=self.webpackChunkpmdm||[]).push([[207],{7696:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"pmdm_2526/ut5_persistencia/supabase-storage/integracion-android","title":"Integraci\xf3n de Supabase Storage en Android","description":"Supabase Storage es un servicio que expone una API RESTful para gestionar archivos en la nube. Proporciona una serie de endpoints HTTP que permiten subir, descargar, eliminar y administrar archivos dentro de los buckets.","source":"@site/docs/01_pmdm_2526/ut5_persistencia/5-supabase-storage/3-integracion-android.md","sourceDirName":"01_pmdm_2526/ut5_persistencia/5-supabase-storage","slug":"/pmdm_2526/ut5_persistencia/supabase-storage/integracion-android","permalink":"/DevTacora/docs/pmdm_2526/ut5_persistencia/supabase-storage/integracion-android","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"sidebar_label":"Integraci\xf3n en Android","title":"Integraci\xf3n de Supabase Storage en Android"},"sidebar":"pmdm_2526_Sidebar","previous":{"title":"Configuraci\xf3n Inicial","permalink":"/DevTacora/docs/pmdm_2526/ut5_persistencia/supabase-storage/configuracion-inicial"},"next":{"title":"Demo Anuncios con Im\xe1genes","permalink":"/DevTacora/docs/pmdm_2526/ut5_persistencia/supabase-storage/demo"}}');var i=n(4848),t=n(8453);const s={sidebar_position:3,sidebar_label:"Integraci\xf3n en Android",title:"Integraci\xf3n de Supabase Storage en Android"},o=void 0,l={},d=[{value:"Agregar las dependencias al proyecto",id:"agregar-las-dependencias-al-proyecto",level:3},{value:"Configurar la conexi\xf3n con Supabase",id:"configurar-la-conexi\xf3n-con-supabase",level:3},{value:"\ud83d\udd39 <strong>Configurar el cliente de Retrofit para Supabase</strong>",id:"-configurar-el-cliente-de-retrofit-para-supabase",level:4},{value:"Configurar la API de Supabase Storage",id:"configurar-la-api-de-supabase-storage",level:3},{value:"Subir Archivos a Supabase desde Android",id:"subir-archivos-a-supabase-desde-android",level:2},{value:"Eliminar im\xe1genes de Supabase desde Android",id:"eliminar-im\xe1genes-de-supabase-desde-android",level:2}];function c(e){const a={admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,i.jsxs)("div",{class:"justify-text",children:[(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.strong,{children:"Supabase Storage"})," es un servicio que expone una ",(0,i.jsx)(a.strong,{children:"API RESTful"})," para gestionar archivos en la nube. Proporciona una serie de ",(0,i.jsx)(a.strong,{children:"endpoints HTTP"})," que permiten ",(0,i.jsx)(a.strong,{children:"subir, descargar, eliminar y administrar archivos"})," dentro de los ",(0,i.jsx)(a.strong,{children:"buckets"}),"."]}),(0,i.jsxs)(a.p,{children:["Las interacciones con Supabase Storage se hacen mediante ",(0,i.jsx)(a.strong,{children:"solicitudes HTTP"})," a trav\xe9s de ",(0,i.jsx)(a.strong,{children:"Retrofit"})," u otro cliente HTTP. A continuaci\xf3n se desglosan las principales operaciones:"]}),(0,i.jsxs)(a.table,{children:[(0,i.jsx)(a.thead,{children:(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.th,{children:"Operaci\xf3n"}),(0,i.jsx)(a.th,{children:"M\xe9todo HTTP"}),(0,i.jsx)(a.th,{children:"Endpoint de Supabase Storage"})]})}),(0,i.jsxs)(a.tbody,{children:[(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:(0,i.jsx)(a.strong,{children:"Subir archivo"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"POST"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"/storage/v1/object/{bucket}/{filename}"})})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:(0,i.jsx)(a.strong,{children:"Obtener URL de archivo"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"GET"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"/storage/v1/object/public/{bucket}/{filename}"})})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:(0,i.jsx)(a.strong,{children:"Eliminar archivo"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"DELETE"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"/storage/v1/object/{bucket}/{filename}"})})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:(0,i.jsx)(a.strong,{children:"Listar archivos"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"GET"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"/storage/v1/bucket/{bucket}/objects"})})]})]})]}),(0,i.jsxs)(a.admonition,{title:"\xbfQU\xc9 PASA CON LAS ACTUALIZACIONES?",type:"info",children:[(0,i.jsxs)(a.p,{children:["En Supabase Storage, ",(0,i.jsx)(a.strong,{children:"no existe una operaci\xf3n directa de actualizaci\xf3n"})," (UPDATE) de archivos. Sin embargo, podemos actualizar una imagen siguiendo este flujo:"]}),(0,i.jsxs)(a.ol,{children:["\n",(0,i.jsxs)(a.li,{children:["Eliminar la imagen antigua usando DELETE ",(0,i.jsx)(a.code,{children:"/storage/v1/object/{bucket}/{filename}"})]}),"\n",(0,i.jsxs)(a.li,{children:["Subir la nueva imagen con el mismo nombre de archivo usando POST ",(0,i.jsx)(a.code,{children:"/storage/v1/object/{bucket}/{filename}"})]}),"\n"]})]}),(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.strong,{children:"Retrofit"})," es una biblioteca de Android que facilita las solicitudes HTTP a APIs RESTful. Dado que Supabase Storage expone una API REST, ",(0,i.jsx)(a.strong,{children:"es necesario usar una herramienta como Retrofit para comunicarnos con \xe9l"}),". Adicionalmente, utilizaremos la librer\xeda ",(0,i.jsx)(a.strong,{children:"OkHttp"})," para configuraci\xf3n avanzada de las comunicaciones en red."]}),(0,i.jsx)(a.h3,{id:"agregar-las-dependencias-al-proyecto",children:"Agregar las dependencias al proyecto"}),(0,i.jsxs)(a.p,{children:["Para trabajar con ",(0,i.jsx)(a.strong,{children:"Supabase Storage"}),", debemos agregar las siguientes dependencias en el archivo ",(0,i.jsx)(a.code,{children:"build.gradle"})," (Module: app):"]}),(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-gradle",children:"dependencies {\n    // Retrofit para realizar peticiones HTTP\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\n\n    // OkHttp para manejo avanzado de solicitudes HTTP\n    implementation 'com.squareup.okhttp3:okhttp:4.9.3'\n    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'\n\n    // Glide para cargar im\xe1genes desde Supabase Storage\n    implementation 'com.github.bumptech.glide:glide:4.12.0'\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'\n}\n"})}),(0,i.jsxs)(a.p,{children:["\ud83d\udd39 ",(0,i.jsx)(a.strong,{children:"Retrofit"})," se utilizar\xe1 para gestionar la comunicaci\xf3n con la API de Supabase.",(0,i.jsx)(a.br,{}),"\n","\ud83d\udd39 ",(0,i.jsx)(a.strong,{children:"OkHttp"})," nos permitir\xe1 interceptar y registrar solicitudes HTTP.",(0,i.jsx)(a.br,{}),"\n","\ud83d\udd39 ",(0,i.jsx)(a.strong,{children:"Glide"})," ser\xe1 usado para descargar y mostrar im\xe1genes desde Supabase Storage."]}),(0,i.jsx)(a.admonition,{title:"DEPENDENCIA SUPABASE",type:"info",children:(0,i.jsxs)(a.p,{children:["A diferencia de Firebase, ",(0,i.jsx)(a.strong,{children:"Supabase no requiere la instalaci\xf3n de dependencias"})," en tu proyecto. En su lugar, proporciona una ",(0,i.jsx)(a.strong,{children:"API RESTful"})," con la que puedes interactuar para gestionar la base de datos, autenticaci\xf3n, almacenamiento y otras funcionalidades. Esto significa que la integraci\xf3n con Supabase se realiza mediante ",(0,i.jsx)(a.strong,{children:"peticiones HTTP"}),", por lo que puedes usar herramientas como ",(0,i.jsx)(a.strong,{children:"Retrofit"})," en Android para comunicarte con sus servicios."]})}),(0,i.jsx)(a.hr,{}),(0,i.jsx)(a.h3,{id:"configurar-la-conexi\xf3n-con-supabase",children:"Configurar la conexi\xf3n con Supabase"}),(0,i.jsxs)(a.p,{children:["Para conectarnos a ",(0,i.jsx)(a.strong,{children:"Supabase Storage"}),", necesitamos configurar la ",(0,i.jsx)(a.strong,{children:"URL base de Supabase"})," y el ",(0,i.jsx)(a.strong,{children:"API Key"}),". Creamos una clase para gestionar la conexi\xf3n con Supabase utilizando Retrofit."]}),(0,i.jsx)(a.admonition,{title:"URL BASE Y API KEY",type:"info",children:(0,i.jsxs)(a.p,{children:["Recuerda que en el apartado ",(0,i.jsx)(a.strong,{children:"Configuraci\xf3n Inicial"})," estudiamos de d\xf3nde obtener la URL base y la API Key."]})}),(0,i.jsxs)(a.h4,{id:"-configurar-el-cliente-de-retrofit-para-supabase",children:["\ud83d\udd39 ",(0,i.jsx)(a.strong,{children:"Configurar el cliente de Retrofit para Supabase"})]}),(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:'import retrofit2.Retrofit;\nimport retrofit2.converter.gson.GsonConverterFactory;\n\npublic class SupabaseClient {\n\n    private static Retrofit retrofit = null;\n    private static final String BASE_URL = "https://<tu-supabase-url>.supabase.co/";\n\n    public static Retrofit getClient() {\n        if (retrofit == null) {\n            retrofit = new Retrofit.Builder()\n                    .baseUrl(BASE_URL)\n                    .addConverterFactory(GsonConverterFactory.create())\n                    .build();\n        }\n        return retrofit;\n    }\n}\n'})}),(0,i.jsxs)(a.p,{children:["\ud83d\udd39 Reemplaza ",(0,i.jsx)(a.code,{children:"<tu-supabase-url>"})," por la URL de tu proyecto en Supabase."]}),(0,i.jsx)(a.hr,{}),(0,i.jsx)(a.h3,{id:"configurar-la-api-de-supabase-storage",children:"Configurar la API de Supabase Storage"}),(0,i.jsxs)(a.p,{children:["Creamos una ",(0,i.jsx)(a.strong,{children:"interfaz en Retrofit"})," para gestionar la subida y descarga de archivos en Supabase:"]}),(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:'import okhttp3.MultipartBody;\nimport retrofit2.Call;\nimport retrofit2.http.Header;\nimport retrofit2.http.Multipart;\nimport retrofit2.http.POST;\nimport retrofit2.http.Part;\nimport retrofit2.http.Path;\n\npublic interface SupabaseStorageApi {\n\n    @Multipart\n    @POST("storage/v1/object/{bucket}/{fileName}")\n    Call<Void> uploadImage(\n            @Header("Authorization") String authToken,\n            @Path("bucket") String bucket,\n            @Path("fileName") String fileName,\n            @Part MultipartBody.Part file\n    );\n\n    @DELETE("storage/v1/object/{bucket}/{fileName}")\n    Call<Void> deleteImage(\n            @Header("Authorization") String authToken,\n            @Path("bucket") String bucket,\n            @Path("fileName") String fileName\n);\n\n\n}\n'})}),(0,i.jsxs)(a.p,{children:["\ud83d\udd39 Se usa ",(0,i.jsx)(a.code,{children:"@Multipart"})," para enviar archivos a Supabase.",(0,i.jsx)(a.br,{}),"\n","\ud83d\udd39 Se requiere un ",(0,i.jsx)(a.strong,{children:"bucket"})," y el ",(0,i.jsx)(a.strong,{children:"nombre del archivo"})," en la URL.",(0,i.jsx)(a.br,{}),"\n","\ud83d\udd39 Se debe enviar la API Key en el encabezado ",(0,i.jsx)(a.code,{children:"Authorization"}),"."]}),(0,i.jsx)(a.admonition,{title:"DECLARACI\xd3N DE M\xc9TODOS",type:"info",children:(0,i.jsx)(a.p,{children:"En esta clase debes implementar todos los m\xe9todos que necesites para conectarte a Supabase. Si tu proyecto requiere eliminar im\xe1genes, deber\xe1s definir el m\xe9todo DELETE correspondiente."})}),(0,i.jsx)(a.hr,{}),(0,i.jsx)(a.h2,{id:"subir-archivos-a-supabase-desde-android",children:"Subir Archivos a Supabase desde Android"}),(0,i.jsx)(a.p,{children:"A continuaci\xf3n, se muestra un ejemplo para subir im\xe1genes a Supabase:"}),(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:'private static final String API_KEY = "<TU_API_KEY>"; // Reemplaza con tu API Key\n\n// Recibe por par\xe1metro el fichero de la imagen\npublic LiveData<String> uploadImage(File imageFile) {\n    // LiveData en el que devolveremos la URL p\xfablica de la imagen generada\n    MutableLiveData<String> liveDataUrl = new MutableLiveData<>();\n\n    // Crear el cuerpo de la petici\xf3n para enviar a Supabase (en \xe9l se env\xeda el fichero)\n    RequestBody requestFile = RequestBody.create(MediaType.parse("image/*"), imageFile);\n    MultipartBody.Part body = MultipartBody.Part.createFormData("file", imageFile.getName(), requestFile);\n\n    // Llamada a la API de Supabase\n    // Param 1: Tu API KEY (Autenticaci\xf3n)\n    // Param 2: nombre de tu bucket\n    // Param 3: nombre con el que se crear\xe1 el fichero en Supabase\n    // Param 4: cuerpo de la petici\xf3n (imagen)\n    Call<Void> call = storageApi.uploadImage("Bearer " + API_KEY, "anuncios", imageFile.getName(), body);\n\n    // Enviamos la petici\xf3n\n    call.enqueue(new Callback<Void>() {\n        @Override\n        public void onResponse(Call<Void> call, Response<Void> response) {\n            if (response.isSuccessful()) {\n                // Si todo va bien, recuperamos la URL p\xfablica de la imagen en Supabase\n                // Esta URL ser\xe1 la que guardemos en nuestra base de datos\n                String fileUrl = response.raw().request().url().toString();\n                // Almacenamos el valor en el LiveData\n                liveDataUrl.postValue(fileUrl);\n            } else {\n                // Si no se ha podido completar la petici\xf3n, devolvemos null\n                liveDataUrl.postValue(null);\n            }\n        }\n\n        @Override\n        public void onFailure(Call<Void> call, Throwable t) {\n            // Si no se ha podido completar la petici\xf3n, devolvemos null\n            liveDataUrl.postValue(null);\n        }\n    });\n\n    // Devolvemos el LiveData con la URL de nuestra imagen\n    return liveDataUrl;\n}\n'})}),(0,i.jsx)(a.hr,{}),(0,i.jsx)(a.h2,{id:"eliminar-im\xe1genes-de-supabase-desde-android",children:"Eliminar im\xe1genes de Supabase desde Android"}),(0,i.jsxs)(a.p,{children:["Para eliminar una imagen almacenada en Supabase, debemos realizar una ",(0,i.jsx)(a.strong,{children:"petici\xf3n DELETE"})," a la API de Supabase Storage, indicando el ",(0,i.jsx)(a.strong,{children:"nombre del bucket"})," y el ",(0,i.jsx)(a.strong,{children:"nombre del archivo"})," que queremos eliminar."]}),(0,i.jsxs)(a.p,{children:["A continuaci\xf3n, se muestra un m\xe9todo para eliminar una imagen a partir de su ",(0,i.jsx)(a.strong,{children:"URL p\xfablica"}),":"]}),(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-java",children:'private static final String API_KEY = "<TU_API_KEY>"; // Reemplaza con tu API Key\n\n// M\xe9todo para eliminar una imagen de Supabase a partir de su URL p\xfablica\npublic LiveData<Boolean> deleteImage(String fileUrl) {\n    MutableLiveData<Boolean> resultLiveData = new MutableLiveData<>();\n\n    // Extraer el nombre del archivo de la URL p\xfablica\n    String fileName = obtenerNombreArchivo(fileUrl);\n    if (fileName == null) {\n        resultLiveData.postValue(false);\n        return resultLiveData;\n    }\n\n    // Llamada a la API de Supabase para eliminar la imagen\n    Call<Void> call = storageApi.deleteImage("Bearer " + API_KEY, "anuncios", fileName);\n\n    call.enqueue(new Callback<Void>() {\n        @Override\n        public void onResponse(Call<Void> call, Response<Void> response) {\n            if (response.isSuccessful()) {\n                resultLiveData.postValue(true);\n            } else {\n                resultLiveData.postValue(false);\n            }\n        }\n\n        @Override\n        public void onFailure(Call<Void> call, Throwable t) {\n            resultLiveData.postValue(false);\n        }\n    });\n\n    return resultLiveData;\n}\n\n// M\xe9todo auxiliar para extraer el nombre del archivo de la URL p\xfablica\nprivate String obtenerNombreArchivo(String fileUrl) {\n    try {\n        Uri uri = Uri.parse(fileUrl);\n        return uri.getLastPathSegment(); // Obtiene el \xfaltimo segmento de la URL (nombre del archivo)\n    } catch (Exception e) {\n        return null;\n    }\n}\n'})}),(0,i.jsxs)(a.p,{children:["\ud83d\udd0d ",(0,i.jsx)(a.strong,{children:"Explicaci\xf3n del c\xf3digo"})]}),(0,i.jsxs)(a.p,{children:["\u2705 ",(0,i.jsx)(a.strong,{children:"Extrae el nombre del archivo"})," desde la URL p\xfablica con ",(0,i.jsx)(a.code,{children:"obtenerNombreArchivo(fileUrl)"}),".",(0,i.jsx)(a.br,{}),"\n","\u2705 ",(0,i.jsxs)(a.strong,{children:["Realiza una petici\xf3n ",(0,i.jsx)(a.code,{children:"DELETE"})]})," a Supabase Storage para eliminar el archivo.",(0,i.jsx)(a.br,{}),"\n","\u2705 ",(0,i.jsxs)(a.strong,{children:["Devuelve un ",(0,i.jsx)(a.code,{children:"LiveData<Boolean>"})]})," indicando si la eliminaci\xf3n fue exitosa (",(0,i.jsx)(a.code,{children:"true"}),") o fallida (",(0,i.jsx)(a.code,{children:"false"}),")."]})]})}function u(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>s,x:()=>o});var r=n(6540);const i={},t=r.createContext(i);function s(e){const a=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(t.Provider,{value:a},e.children)}}}]);