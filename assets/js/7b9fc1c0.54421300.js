"use strict";(self.webpackChunkpmdm=self.webpackChunkpmdm||[]).push([[3512],{16169:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"pia_2526/ut2_python_para_ia/funciones","title":"Programaci\xf3n funcional","description":"Qu\xe9 son las funciones, c\xf3mo se definen, c\xf3mo se llaman, tipos de argumentos y valores de retorno en Python. Uso de funciones lambda, funciones de orden superior como map, filter y reduce, decoradores y gestores de contexto (context managers) en Python.","source":"@site/docs/01_pia_2526/ut2_python_para_ia/6-funciones.md","sourceDirName":"01_pia_2526/ut2_python_para_ia","slug":"/pia_2526/ut2_python_para_ia/funciones","permalink":"/DevTacora/docs/pia_2526/ut2_python_para_ia/funciones","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Programaci\xf3n funcional","sidebar_position":5,"description":"Qu\xe9 son las funciones, c\xf3mo se definen, c\xf3mo se llaman, tipos de argumentos y valores de retorno en Python. Uso de funciones lambda, funciones de orden superior como map, filter y reduce, decoradores y gestores de contexto (context managers) en Python.","keywords":["Python","programaci\xf3n funcional","lambda","map","filter","reduce","decoradores","context managers"]},"sidebar":"pia_2526_Sidebar","previous":{"title":"Diccionarios","permalink":"/DevTacora/docs/pia_2526/ut2_python_para_ia/estructuras-datos/5-4-diccionarios"},"next":{"title":"M\xf3dulos e importaciones","permalink":"/DevTacora/docs/pia_2526/ut2_python_para_ia/modulos"}}');var a=r(74848),o=r(28453);const i={title:"Programaci\xf3n funcional",sidebar_position:5,description:"Qu\xe9 son las funciones, c\xf3mo se definen, c\xf3mo se llaman, tipos de argumentos y valores de retorno en Python. Uso de funciones lambda, funciones de orden superior como map, filter y reduce, decoradores y gestores de contexto (context managers) en Python.",keywords:["Python","programaci\xf3n funcional","lambda","map","filter","reduce","decoradores","context managers"]},d=void 0,c={},l=[{value:"Funciones",id:"funciones",level:2},{value:"Par\xe1metros y argumentos",id:"par\xe1metros-y-argumentos",level:3},{value:"Varios par\xe1metros",id:"varios-par\xe1metros",level:4},{value:"Valores de retorno (<code>return</code>)",id:"valores-de-retorno-return",level:3},{value:"Funciones que devuelven varios valores",id:"funciones-que-devuelven-varios-valores",level:4},{value:"Funciones que no devuelven nada",id:"funciones-que-no-devuelven-nada",level:4},{value:"Tipos de par\xe1metros",id:"tipos-de-par\xe1metros",level:3},{value:"1. Posicionales (los m\xe1s comunes)",id:"1-posicionales-los-m\xe1s-comunes",level:4},{value:"2. Nombrados (keyword arguments)",id:"2-nombrados-keyword-arguments",level:4},{value:"3. Valores por defecto",id:"3-valores-por-defecto",level:4},{value:"4. Par\xe1metros variables (<code>*args</code> y <code>**kwargs</code>)",id:"4-par\xe1metros-variables-args-y-kwargs",level:4},{value:"<code>*args</code> \u2192 varios argumentos posicionales",id:"args--varios-argumentos-posicionales",level:5},{value:"<code>**kwargs</code> \u2192 varios argumentos nombrados",id:"kwargs--varios-argumentos-nombrados",level:5},{value:"\ud83d\udd39 Diferencias <code>*args</code> y <code>*kwargs</code>",id:"-diferencias-args-y-kwargs",level:5},{value:"Documentaci\xf3n: Docstrings",id:"documentaci\xf3n-docstrings",level:3},{value:"Variables locales y globales",id:"variables-locales-y-globales",level:3},{value:"Buenas pr\xe1cticas",id:"buenas-pr\xe1cticas",level:3},{value:"Ejemplo completo",id:"ejemplo-completo",level:3},{value:"Funciones lambda",id:"funciones-lambda",level:2},{value:"Funciones de orden superior",id:"funciones-de-orden-superior",level:2},{value:"<code>map()</code>",id:"map",level:3},{value:"<code>filter()</code>",id:"filter",level:3},{value:"<code>reduce()</code>",id:"reduce",level:3},{value:"C\xf3mo lo interpreta Python:",id:"c\xf3mo-lo-interpreta-python",level:4},{value:"Con valor inicial (\xfatil para definir un acumulador):",id:"con-valor-inicial-\xfatil-para-definir-un-acumulador",level:4},{value:"Decoradores (Decorators)",id:"decoradores-decorators",level:2},{value:"Sintaxis b\xe1sica",id:"sintaxis-b\xe1sica",level:3},{value:"\ud83e\udde0 Explicaci\xf3n paso a paso",id:"-explicaci\xf3n-paso-a-paso",level:4},{value:"Ejemplo b\xe1sico",id:"ejemplo-b\xe1sico",level:3},{value:"Ejemplo de funci\xf3n con par\xe1metros",id:"ejemplo-de-funci\xf3n-con-par\xe1metros",level:3},{value:"Decoradores anidados",id:"decoradores-anidados",level:3},{value:"Ejemplo pr\xe1ctico: tiempo de ejecuci\xf3n",id:"ejemplo-pr\xe1ctico-tiempo-de-ejecuci\xf3n",level:3}];function t(e){const n={admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)("div",{class:"justify-text",children:[(0,a.jsxs)(n.p,{children:["Una ",(0,a.jsx)(n.strong,{children:"funci\xf3n"})," es un ",(0,a.jsx)(n.strong,{children:"bloque de c\xf3digo reutilizable"})," que realiza una tarea espec\xedfica.\nPermiten ",(0,a.jsx)(n.strong,{children:"organizar"})," el c\xf3digo, ",(0,a.jsx)(n.strong,{children:"evitar repeticiones"})," y hacerlo ",(0,a.jsx)(n.strong,{children:"m\xe1s legible y mantenible"}),"."]}),(0,a.jsxs)(n.p,{children:["Podemos imaginarlas como ",(0,a.jsx)(n.strong,{children:"\u201cm\xe1quinas\u201d"}),": reciben datos (entradas), hacen algo con ellos y devuelven un resultado (salida)."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"ENTRADA \u2192 [ FUNCI\xd3N ] \u2192 SALIDA\n"})}),(0,a.jsx)(n.h2,{id:"funciones",children:"Funciones"}),(0,a.jsxs)(n.p,{children:["Las funciones se definen con la palabra clave ",(0,a.jsx)(n.code,{children:"def"}),", seguida de un nombre, par\xe9ntesis (con o sin par\xe1metros) y dos puntos.\nEl ",(0,a.jsx)(n.strong,{children:"cuerpo"})," de la funci\xf3n se escribe indentado (normalmente 4 espacios)."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def saludar():\n    print("Hola, mundo!")\n'})}),(0,a.jsxs)(n.p,{children:["Para ",(0,a.jsx)(n.strong,{children:"ejecutarla"}),", se llama por su nombre seguido de par\xe9ntesis:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"saludar()\n# Salida: Hola, mundo!\n"})}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"par\xe1metros-y-argumentos",children:"Par\xe1metros y argumentos"}),(0,a.jsxs)(n.p,{children:["Los ",(0,a.jsx)(n.strong,{children:"par\xe1metros"})," son los ",(0,a.jsx)(n.strong,{children:"nombres de variables"})," que aparecen entre par\xe9ntesis en la definici\xf3n de la funci\xf3n. Act\xfaan como ",(0,a.jsx)(n.strong,{children:"\u201cvariables locales\u201d"})," que recibir\xe1n un valor cuando se llame a la funci\xf3n."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def saludar_persona(nombre):\n    print(f"Hola, {nombre}!")\n'})}),(0,a.jsxs)(n.p,{children:["Los ",(0,a.jsx)(n.strong,{children:"argumentos"})," son los ",(0,a.jsx)(n.strong,{children:"valores reales"})," que pasamos a la funci\xf3n cuando la llamamos."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'saludar_persona("Ana")\n# Salida: Hola, Ana!\n'})}),(0,a.jsx)(n.h4,{id:"varios-par\xe1metros",children:"Varios par\xe1metros"}),(0,a.jsx)(n.p,{children:"Podemos definir funciones con varios par\xe1metros, separados por comas."}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def presentar(nombre, edad):\n    print(f"Me llamo {nombre} y tengo {edad} a\xf1os.")\n'})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'presentar("Luis", 20)\n# Salida: Me llamo Luis y tengo 20 a\xf1os.\n'})}),(0,a.jsx)(n.hr,{}),(0,a.jsxs)(n.h3,{id:"valores-de-retorno-return",children:["Valores de retorno (",(0,a.jsx)(n.code,{children:"return"}),")"]}),(0,a.jsxs)(n.p,{children:["Una funci\xf3n puede ",(0,a.jsx)(n.strong,{children:"devolver un valor"})," usando la palabra clave ",(0,a.jsx)(n.code,{children:"return"}),".\nEsto permite ",(0,a.jsx)(n.strong,{children:"guardar el resultado"})," en una variable o usarlo en una expresi\xf3n."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def sumar(a, b):\n    return a + b\n"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"resultado = sumar(5, 3)\nprint(resultado)   # 8\n"})}),(0,a.jsxs)(n.admonition,{title:"Importante",type:"warning",children:[(0,a.jsxs)(n.p,{children:["Cuando una funci\xf3n ejecuta ",(0,a.jsx)(n.code,{children:"return"}),", ",(0,a.jsx)(n.strong,{children:"termina inmediatamente"})," y devuelve el valor indicado. Esto implica que el c\xf3digo que hay debajo nunca se ejecutar\xe1."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def sumar(a, b):\n    return a + b\n    print("Este mensaje va despu\xe9s del return") # Esta l\xednea nunca llega a ejecutarse\n'})})]}),(0,a.jsx)(n.h4,{id:"funciones-que-devuelven-varios-valores",children:"Funciones que devuelven varios valores"}),(0,a.jsxs)(n.p,{children:["En Python, una funci\xf3n puede ",(0,a.jsx)(n.strong,{children:"devolver varios valores a la vez"})," separ\xe1ndolos con comas.\nInternamente, Python los agrupa en una ",(0,a.jsx)(n.strong,{children:"tupla"}),", aunque no sea necesario escribir los par\xe9ntesis."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def operaciones(a, b):\n    suma = a + b\n    resta = a - b\n    producto = a * b\n    return suma, resta, producto\n"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"resultados = operaciones(5, 3)\nprint(resultados)\n# (8, 2, 15)\n"})}),(0,a.jsxs)(n.p,{children:["En este caso, ",(0,a.jsx)(n.code,{children:"resultados"})," es una ",(0,a.jsx)(n.strong,{children:"tupla"})," con los tres valores."]}),(0,a.jsxs)(n.p,{children:["Tambi\xe9n podemos ",(0,a.jsx)(n.strong,{children:"desempaquetar"})," los valores directamente en variables separadas:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'s, r, p = operaciones(5, 3)\nprint(f"Suma: {s}, Resta: {r}, Producto: {p}")\n# Suma: 8, Resta: 2, Producto: 15\n'})}),(0,a.jsx)(n.h4,{id:"funciones-que-no-devuelven-nada",children:"Funciones que no devuelven nada"}),(0,a.jsxs)(n.p,{children:["Si no se usa ",(0,a.jsx)(n.code,{children:"return"}),", la funci\xf3n devuelve impl\xedcitamente ",(0,a.jsx)(n.code,{children:"None"}),"."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def saludo():\n    print("Hola!")\n\nx = saludo()    # Ejecuta la funci\xf3n\nprint(x)        # None\n'})}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"tipos-de-par\xe1metros",children:"Tipos de par\xe1metros"}),(0,a.jsx)(n.p,{children:"Python permite distintos tipos de par\xe1metros seg\xfan la flexibilidad que queramos."}),(0,a.jsx)(n.h4,{id:"1-posicionales-los-m\xe1s-comunes",children:"1. Posicionales (los m\xe1s comunes)"}),(0,a.jsxs)(n.p,{children:["Los argumentos se pasan en el ",(0,a.jsx)(n.strong,{children:"mismo orden"})," que los par\xe1metros."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def resta(a, b):\n    return a - b\n\nprint(resta(10, 5))   # 5\n"})}),(0,a.jsx)(n.h4,{id:"2-nombrados-keyword-arguments",children:"2. Nombrados (keyword arguments)"}),(0,a.jsxs)(n.p,{children:["Se puede indicar el nombre del par\xe1metro al llamar la funci\xf3n.\nEsto permite ",(0,a.jsx)(n.strong,{children:"cambiar el orden"})," o ",(0,a.jsx)(n.strong,{children:"hacer el c\xf3digo m\xe1s claro"}),"."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def resta(a, b):\n    return a - b\n\nprint(resta(b=2, a=8))   # 6\n"})}),(0,a.jsx)(n.h4,{id:"3-valores-por-defecto",children:"3. Valores por defecto"}),(0,a.jsxs)(n.p,{children:["Podemos asignar un ",(0,a.jsx)(n.strong,{children:"valor predeterminado"})," a un par\xe1metro, que se usa si no se pasa argumento."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def saludar(nombre="invitado"):\n    print(f"Hola, {nombre}!")\n\nsaludar()          # Hola, invitado!\nsaludar("Marta")   # Hola, Marta!\n'})}),(0,a.jsxs)(n.h4,{id:"4-par\xe1metros-variables-args-y-kwargs",children:["4. Par\xe1metros variables (",(0,a.jsx)(n.code,{children:"*args"})," y ",(0,a.jsx)(n.code,{children:"**kwargs"}),")"]}),(0,a.jsx)(n.p,{children:"A veces no sabemos cu\xe1ntos argumentos recibir\xe1 la funci\xf3n."}),(0,a.jsxs)(n.h5,{id:"args--varios-argumentos-posicionales",children:[(0,a.jsx)(n.code,{children:"*args"})," \u2192 varios argumentos posicionales"]}),(0,a.jsx)(n.p,{children:"Si no sabemos cu\xe1ntos argumentos vamos a pasar a nuestra funci\xf3n, podemos crear una funci\xf3n que acepte un n\xfamero arbitrario de argumentos a\xf1adiendo un asterisco * antes del nombre del par\xe1metro."}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def sumar_todo(*numeros):\n    total = 0\n    for num in numeros:\n        total = total + num\n    return total\n\nprint(sumar_todo(1, 2, 3, 4))  # 10\n"})}),(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsx)(n.p,{children:"Tambi\xe9n puedes mezclar los tipos de par\xe1metros."}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def generar_grupos(nombre_grupo, *miembros, ciudad = "C\xe1ceres"):\n    print(f"El grupo se llama {nombre_grupo} y pertenece a la de ciudad de {ciudad}")\n    print("Los miembros son:")\n    for miembro in miembros:\n        print(miembro)\n\n# ciudad debe ir nombrado para evitar que lo incluya como parte de los argumentos posicionales "miembros"\ngenerar_grupos("Equipo 1", "Pedro", "Ana", "Juan", ciudad = "Madrid")\n'})})]}),(0,a.jsxs)(n.h5,{id:"kwargs--varios-argumentos-nombrados",children:[(0,a.jsx)(n.code,{children:"**kwargs"})," \u2192 varios argumentos nombrados"]}),(0,a.jsxs)(n.p,{children:["A veces no sabemos ",(0,a.jsx)(n.strong,{children:"qu\xe9 cantidad de argumentos con nombre"})," (",(0,a.jsx)(n.code,{children:"clave=valor"}),") se van a pasar a una funci\xf3n.\nEn esos casos, podemos usar ",(0,a.jsx)(n.code,{children:"**kwargs"})," (",(0,a.jsx)(n.em,{children:"keyword arguments"}),"), que ",(0,a.jsx)(n.strong,{children:"recoge todos los argumentos nombrados adicionales"})," en un ",(0,a.jsx)(n.strong,{children:"diccionario"}),"."]}),(0,a.jsxs)(n.p,{children:["La palabra ",(0,a.jsx)(n.code,{children:"kwargs"})," es una convenci\xf3n (viene de ",(0,a.jsx)(n.em,{children:"keyword arguments"}),"), pero podr\xedas usar cualquier nombre despu\xe9s de los dos asteriscos ",(0,a.jsx)(n.code,{children:"**"}),"."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def mostrar_info(**datos):\n    for clave, valor in datos.items():\n        print(f"{clave}: {valor}")\n\nmostrar_info(nombre="Ana", edad=22, ciudad="Madrid")\n'})}),(0,a.jsx)(n.p,{children:"Salida:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"nombre: Ana\nedad: 22\nciudad: Madrid\n"})}),(0,a.jsxs)(n.p,{children:["\ud83d\udc49 Internamente, ",(0,a.jsx)(n.code,{children:"**datos"})," se convierte en un ",(0,a.jsx)(n.strong,{children:"diccionario"}),":"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'{\n  "nombre": "Ana",\n  "edad": 22,\n  "ciudad": "Madrid"\n}\n'})}),(0,a.jsxs)(n.p,{children:["Por eso podemos recorrerlo con ",(0,a.jsx)(n.code,{children:".items()"})," para acceder a las ",(0,a.jsx)(n.strong,{children:"claves"})," y ",(0,a.jsx)(n.strong,{children:"valores"}),"."]}),(0,a.jsxs)(n.h5,{id:"-diferencias-args-y-kwargs",children:["\ud83d\udd39 Diferencias ",(0,a.jsx)(n.code,{children:"*args"})," y ",(0,a.jsx)(n.code,{children:"*kwargs"})]}),(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Caracter\xedstica"}),(0,a.jsx)(n.th,{children:(0,a.jsx)(n.code,{children:"*args"})}),(0,a.jsx)(n.th,{children:(0,a.jsx)(n.code,{children:"**kwargs"})})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Captura"}),(0,a.jsx)(n.td,{children:"Argumentos posicionales"}),(0,a.jsx)(n.td,{children:"Argumentos nombrados (clave=valor)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Tipo de estructura"}),(0,a.jsx)(n.td,{children:"Tupla"}),(0,a.jsx)(n.td,{children:"Diccionario"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Ejemplo"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"sumar_todo(1,2,3)"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:'mostrar_info(nombre="Ana", edad=22)'})})]})]})]}),(0,a.jsx)(n.p,{children:"Ambos pueden combinarse en una misma funci\xf3n:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def registrar_usuario(*roles, **datos):\n    print("Roles:", roles)\n    print("Datos:", datos)\n\nregistrar_usuario("admin", "editor", nombre="Luis", activo=True)\n'})}),(0,a.jsx)(n.p,{children:"Salida:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Roles: ('admin', 'editor')\nDatos: {'nombre': 'Luis', 'activo': True}\n"})}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"documentaci\xf3n-docstrings",children:"Documentaci\xf3n: Docstrings"}),(0,a.jsxs)(n.p,{children:["Podemos incluir un ",(0,a.jsx)(n.strong,{children:"comentario descriptivo"})," dentro de la funci\xf3n usando ",(0,a.jsx)(n.strong,{children:"triple comillas"}),".\nSe llama ",(0,a.jsx)(n.strong,{children:"docstring"})," y explica qu\xe9 hace la funci\xf3n."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def area_rectangulo(base, altura):\n    """Calcula el \xe1rea de un rect\xe1ngulo a partir de su base y altura."""\n    return base * altura\n'})}),(0,a.jsx)(n.p,{children:"Para consultar la documentaci\xf3n de una funci\xf3n:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"help(area_rectangulo)\n"})}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"variables-locales-y-globales",children:"Variables locales y globales"}),(0,a.jsxs)(n.p,{children:["Las variables ",(0,a.jsx)(n.strong,{children:"definidas dentro"})," de una funci\xf3n ",(0,a.jsx)(n.strong,{children:"solo existen en su interior"}),":\na eso se le llama ",(0,a.jsx)(n.strong,{children:"\xe1mbito local"})," (",(0,a.jsx)(n.em,{children:"scope"}),")."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def ejemplo():\n    x = 10   # variable local\n    print(x)\n\nejemplo()\n# print(x)  # \u274c Error: x no est\xe1 definida fuera\n"})}),(0,a.jsxs)(n.p,{children:["Si necesitas usar una variable ",(0,a.jsx)(n.strong,{children:"declarada fuera"})," (global) dentro de una funci\xf3n, se puede acceder, pero ",(0,a.jsx)(n.strong,{children:"no modificar"})," a menos que se use ",(0,a.jsx)(n.code,{children:"global"}),"."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"contador = 0\n\ndef incrementar():\n    global contador\n    contador += 1\n\nincrementar()\nprint(contador)   # 1\n"})}),(0,a.jsxs)(n.admonition,{title:"CUIDADO CON LAS VARIABLES GLOBALES",type:"warning",children:[(0,a.jsxs)(n.p,{children:["Las ",(0,a.jsx)(n.strong,{children:"variables globales"})," pueden causar errores dif\xedciles de detectar, ya que cualquier funci\xf3n puede modificarlas y alterar el comportamiento del programa sin que te des cuenta."]}),(0,a.jsxs)(n.p,{children:["\u2705 ",(0,a.jsx)(n.strong,{children:"Buena pr\xe1ctica:"})," usa ",(0,a.jsx)(n.strong,{children:"par\xe1metros"})," y ",(0,a.jsx)(n.strong,{children:"valores de retorno"})," para pasar informaci\xf3n entre funciones en lugar de depender de variables globales."]})]}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"buenas-pr\xe1cticas",children:"Buenas pr\xe1cticas"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\u2705 ",(0,a.jsx)(n.strong,{children:"Nombres descriptivos"})," \u2192 usa verbos si la funci\xf3n hace algo (",(0,a.jsx)(n.code,{children:"calcular_media"}),", ",(0,a.jsx)(n.code,{children:"mostrar_menu"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:["\u2705 ",(0,a.jsx)(n.strong,{children:"Una sola tarea por funci\xf3n"})," \u2192 evita funciones que hagan demasiadas cosas."]}),"\n",(0,a.jsxs)(n.li,{children:["\u2705 ",(0,a.jsx)(n.strong,{children:"Evita duplicar c\xf3digo"})," \u2192 si algo se repite, convi\xe9rtelo en funci\xf3n."]}),"\n",(0,a.jsxs)(n.li,{children:["\u2705 ",(0,a.jsxs)(n.strong,{children:["Usa ",(0,a.jsx)(n.code,{children:"return"})," para devolver datos"]}),", no solo ",(0,a.jsx)(n.code,{children:"print"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["\u2705 ",(0,a.jsx)(n.strong,{children:"Documenta"})," las funciones con docstrings y comenta el c\xf3digo cuando sea necesario."]}),"\n"]}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"ejemplo-completo",children:"Ejemplo completo"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def calcular_precio_final(precio, iva=21, descuento=0):\n    """\n    Calcula el precio final de un producto.\n    - precio: precio base (float)\n    - iva: porcentaje de IVA (por defecto 21)\n    - descuento: porcentaje de descuento (por defecto 0)\n    Devuelve el precio total.\n    """\n    precio_con_iva = precio * (1 + iva / 100)\n    precio_final = precio_con_iva * (1 - descuento / 100)\n    return round(precio_final, 2)\n\n# Uso\np1 = calcular_precio_final(100)\np2 = calcular_precio_final(100, iva=10, descuento=5)\n\nprint(p1, p2)   # 121.0 104.5\n'})}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h2,{id:"funciones-lambda",children:"Funciones lambda"}),(0,a.jsxs)(n.p,{children:["Las ",(0,a.jsx)(n.strong,{children:"funciones lambda"})," son ",(0,a.jsx)(n.strong,{children:"funciones an\xf3nimas"})," (sin nombre), definidas en una sola l\xednea con la palabra clave ",(0,a.jsx)(n.code,{children:"lambda"}),"."]}),(0,a.jsx)(n.p,{children:"Sintaxis:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"lambda argumentos: expresi\xf3n\n"})}),(0,a.jsx)(n.p,{children:"Ejemplo b\xe1sico:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"doble = lambda x: x * 2\nprint(doble(5))   # 10\n"})}),(0,a.jsx)(n.p,{children:"\u27a1\ufe0f Es equivalente a:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def doble(x):\n    return x * 2\n"})}),(0,a.jsxs)(n.p,{children:["Las lambdas se usan cuando necesitamos ",(0,a.jsx)(n.strong,{children:"funciones cortas y desechables"}),", por ejemplo, dentro de ",(0,a.jsx)(n.code,{children:"map"}),", ",(0,a.jsx)(n.code,{children:"filter"})," o ",(0,a.jsx)(n.code,{children:"sorted"}),"."]}),(0,a.jsx)(n.p,{children:"Ejemplo con varias variables:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"suma = lambda a, b: a + b\nprint(suma(3, 4))   # 7\n"})}),(0,a.jsx)(n.p,{children:"Y pueden incluir expresiones l\xf3gicas:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"mayor = lambda a, b: a if a > b else b\nprint(mayor(8, 5))  # 8\n"})}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h2,{id:"funciones-de-orden-superior",children:"Funciones de orden superior"}),(0,a.jsxs)(n.p,{children:["En Python (y en otros lenguajes funcionales), una ",(0,a.jsx)(n.strong,{children:"funci\xf3n de orden superior"})," es simplemente una ",(0,a.jsx)(n.strong,{children:"funci\xf3n que trabaja con otras funciones"}),".\nConcretamente, cumple ",(0,a.jsx)(n.strong,{children:"al menos una"})," de estas dos condiciones:"]}),(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.strong,{children:"Recibe una o m\xe1s funciones como argumento."})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.strong,{children:"Devuelve una funci\xf3n como resultado."})}),"\n"]}),(0,a.jsxs)(n.p,{children:["En otras palabras, las ",(0,a.jsx)(n.em,{children:"higher-order functions"})," tratan las funciones ",(0,a.jsx)(n.strong,{children:"como datos"}),": pueden recibirlas, devolverlas o combinarlas."]}),(0,a.jsxs)(n.p,{children:["Python incluye varias ",(0,a.jsx)(n.strong,{children:"funciones que aceptan otras funciones"})," como argumento.\nLas m\xe1s comunes en programaci\xf3n funcional son: ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"map()"})}),", ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"filter()"})})," y ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"reduce()"})}),"."]}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"map",children:(0,a.jsx)(n.code,{children:"map()"})}),(0,a.jsxs)(n.p,{children:["Aplica una funci\xf3n a ",(0,a.jsx)(n.strong,{children:"cada elemento"})," de un iterable y devuelve un ",(0,a.jsx)(n.strong,{children:"iterador"})," con los resultados."]}),(0,a.jsx)(n.p,{children:"Sintaxis:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"map(funci\xf3n, iterable)\n"})}),(0,a.jsx)(n.p,{children:"Ejemplo:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"numeros = [1, 2, 3, 4, 5]\ndobles = map(lambda x: x * 2, numeros)\nlista_dobles = list(dobles)\nprint(lista_dobles)   # [2, 4, 6, 8, 10]\n"})}),(0,a.jsx)(n.p,{children:"Tambi\xe9n puedes usar una funci\xf3n ya definida:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def cuadrado(x):\n    return x**2\n\nnumeros = [1, 2, 3, 4]\nresultado = list(map(cuadrado, numeros))\nprint(resultado)  # [1, 4, 9, 16]\n"})}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"filter",children:(0,a.jsx)(n.code,{children:"filter()"})}),(0,a.jsxs)(n.p,{children:["Filtra los elementos de un iterable ",(0,a.jsx)(n.strong,{children:"seg\xfan una condici\xf3n booleana"}),"."]}),(0,a.jsx)(n.p,{children:"Sintaxis:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"filter(funci\xf3n, iterable)\n"})}),(0,a.jsx)(n.p,{children:"Ejemplo:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"numeros = [1, 2, 3, 4, 5, 6]\npares = filter(lambda x: x % 2 == 0, numeros)\nprint(list(pares))   # [2, 4, 6]\n"})}),(0,a.jsxs)(n.p,{children:["La funci\xf3n debe devolver ",(0,a.jsx)(n.code,{children:"True"})," o ",(0,a.jsx)(n.code,{children:"False"})," para cada elemento."]}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"reduce",children:(0,a.jsx)(n.code,{children:"reduce()"})}),(0,a.jsxs)(n.p,{children:["Aplica una funci\xf3n de forma ",(0,a.jsx)(n.strong,{children:"acumulativa"})," sobre los elementos de un iterable, ",(0,a.jsx)(n.strong,{children:"reduci\xe9ndolo a un solo valor"}),". Para hacerlo, ",(0,a.jsx)(n.strong,{children:"va aplicando una funci\xf3n binaria"})," (una funci\xf3n que toma dos argumentos) ",(0,a.jsx)(n.strong,{children:"de manera acumulativa"}),":"]}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Toma los dos primeros elementos"}),"\n",(0,a.jsx)(n.li,{children:"Aplica la funci\xf3n"}),"\n",(0,a.jsx)(n.li,{children:"Luego combina el resultado con el siguiente elemento"}),"\n",(0,a.jsx)(n.li,{children:"Y as\xed sucesivamente hasta llegar al final"}),"\n"]}),(0,a.jsxs)(n.p,{children:["Por eso, ",(0,a.jsxs)(n.strong,{children:["la funci\xf3n que se pasa a ",(0,a.jsx)(n.code,{children:"reduce()"})," siempre debe aceptar dos par\xe1metros"]}),":"]}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["uno representa el ",(0,a.jsx)(n.strong,{children:"acumulador"})," (el resultado parcial hasta el momento)"]}),"\n",(0,a.jsxs)(n.li,{children:["y el otro el ",(0,a.jsx)(n.strong,{children:"nuevo elemento"})," de la lista."]}),"\n"]}),(0,a.jsxs)(n.p,{children:["Est\xe1 en el m\xf3dulo ",(0,a.jsx)(n.code,{children:"functools"}),", por lo que debe importarse."]}),(0,a.jsx)(n.p,{children:"Sintaxis:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from functools import reduce\nreduce(funci\xf3n, iterable[, valor_inicial])\n"})}),(0,a.jsx)(n.p,{children:"Ejemplo:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from functools import reduce\n\nnumeros = [1, 2, 3, 4]\nproducto = reduce(lambda x, y: x * y, numeros)\nprint(producto)  # 24\n"})}),(0,a.jsx)(n.h4,{id:"c\xf3mo-lo-interpreta-python",children:"C\xf3mo lo interpreta Python:"}),(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Toma los dos primeros elementos: ",(0,a.jsx)(n.code,{children:"1"})," y ",(0,a.jsx)(n.code,{children:"2"}),":",(0,a.jsx)(n.br,{}),"\n","\u2192 ejecuta ",(0,a.jsx)(n.code,{children:"lambda x, y: x * y"})," \u2192 ",(0,a.jsx)(n.code,{children:"1 * 2 = 2"})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Luego usa ese resultado (",(0,a.jsx)(n.code,{children:"2"}),") como primer par\xe1metro (",(0,a.jsx)(n.code,{children:"x"}),") y el siguiente elemento de la lista (",(0,a.jsx)(n.code,{children:"3"}),") como segundo (",(0,a.jsx)(n.code,{children:"y"}),"):",(0,a.jsx)(n.br,{}),"\n","\u2192 ",(0,a.jsx)(n.code,{children:"2 * 3 = 6"})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Repite con el resultado (",(0,a.jsx)(n.code,{children:"6"}),") y el siguiente (",(0,a.jsx)(n.code,{children:"4"}),"):",(0,a.jsx)(n.br,{}),"\n","\u2192 ",(0,a.jsx)(n.code,{children:"6 * 4 = 24"})]}),"\n"]}),"\n"]}),(0,a.jsxs)(n.p,{children:["\ud83c\udfaf Resultado final: ",(0,a.jsx)(n.code,{children:"24"})]}),(0,a.jsx)(n.h4,{id:"con-valor-inicial-\xfatil-para-definir-un-acumulador",children:"Con valor inicial (\xfatil para definir un acumulador):"}),(0,a.jsxs)(n.p,{children:["Si proporcionas un ",(0,a.jsx)(n.strong,{children:"valor inicial"}),", ",(0,a.jsx)(n.code,{children:"reduce()"})," empezar\xe1 la acumulaci\xf3n desde ese valor.\nEse valor act\xfaa como ",(0,a.jsx)(n.strong,{children:"primer acumulador"})," antes de empezar a recorrer el iterable."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"suma = reduce(lambda acc, x: acc + x, numeros, 10)\nprint(suma)   # 20 (10 + 1 + 2 + 3 + 4)\n"})}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h2,{id:"decoradores-decorators",children:"Decoradores (Decorators)"}),(0,a.jsxs)(n.p,{children:["Un ",(0,a.jsx)(n.strong,{children:"decorador"})," es una ",(0,a.jsx)(n.strong,{children:"funci\xf3n que recibe otra funci\xf3n como argumento y devuelve una nueva funci\xf3n"}),", normalmente una versi\xf3n \u201cmejorada\u201d o \u201cmodificada\u201d de la original."]}),(0,a.jsx)(n.p,{children:"En otras palabras:"}),(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Un decorador ",(0,a.jsx)(n.strong,{children:"envuelve"})," una funci\xf3n para a\xf1adirle comportamiento extra ",(0,a.jsx)(n.strong,{children:"sin modificar su c\xf3digo original"}),"."]}),"\n"]}),(0,a.jsxs)(n.p,{children:["Se usa con la sintaxis ",(0,a.jsx)(n.code,{children:"@nombre_decorador"})," justo ",(0,a.jsx)(n.strong,{children:"encima"})," de la funci\xf3n a decorar."]}),(0,a.jsx)(n.p,{children:"Esto permite a\xf1adir funcionalidades como:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Mostrar mensajes antes o despu\xe9s de ejecutar una funci\xf3n."}),"\n",(0,a.jsx)(n.li,{children:"Medir tiempos de ejecuci\xf3n."}),"\n",(0,a.jsx)(n.li,{children:"Controlar acceso o validar permisos."}),"\n",(0,a.jsx)(n.li,{children:"Registrar logs (mensajes de depuraci\xf3n)."}),"\n",(0,a.jsx)(n.li,{children:"Evitar repetir c\xf3digo en varias funciones."}),"\n"]}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"sintaxis-b\xe1sica",children:"Sintaxis b\xe1sica"}),(0,a.jsxs)(n.p,{children:["El decorador ",(0,a.jsx)(n.strong,{children:"recibe una funci\xf3n"}),", pero no la ejecuta inmediatamente.\nEn su interior define otra funci\xf3n (normalmente llamada ",(0,a.jsx)(n.code,{children:"wrapper"}),", \u201cenvoltorio\u201d) que ",(0,a.jsx)(n.strong,{children:"envuelve el comportamiento original"})," y a\xf1ade el nuevo c\xf3digo."]}),(0,a.jsx)(n.p,{children:"La estructura general es:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def decorador(funcion_original):\n    def wrapper():\n        # C\xf3digo que se ejecuta ANTES de la funci\xf3n original\n        ...\n        funcion_original()  # llamada a la funci\xf3n original\n        # C\xf3digo que se ejecuta DESPU\xc9S de la funci\xf3n original\n        ...\n    return wrapper  # devolvemos la nueva funci\xf3n\n"})}),(0,a.jsx)(n.h4,{id:"-explicaci\xf3n-paso-a-paso",children:"\ud83e\udde0 Explicaci\xf3n paso a paso"}),(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"decorador"})," es una funci\xf3n que recibe otra funci\xf3n (",(0,a.jsx)(n.code,{children:"funcion_original"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:["Dentro de ",(0,a.jsx)(n.code,{children:"decorador"}),", definimos una ",(0,a.jsx)(n.strong,{children:"nueva funci\xf3n"})," (",(0,a.jsx)(n.code,{children:"wrapper"}),") que a\xf1ade algo antes y/o despu\xe9s de la original."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"decorador"})," devuelve ",(0,a.jsx)(n.code,{children:"wrapper"}),", no la ejecuta."]}),"\n",(0,a.jsxs)(n.li,{children:["Cuando Python ve ",(0,a.jsx)(n.code,{children:"@decorador"})," encima de una funci\xf3n, ",(0,a.jsx)(n.strong,{children:"sustituye la funci\xf3n original por el resultado del decorador"}),"."]}),"\n"]}),(0,a.jsx)(n.admonition,{title:"Un decorador es una funci\xf3n de orden superior",type:"info",children:(0,a.jsxs)(n.p,{children:["Un decorador es un tipo especial de ",(0,a.jsx)(n.strong,{children:"Higher-Order Function"}),", dise\xf1ado espec\xedficamente para envolver otra funci\xf3n y alterar o ampliar su comportamiento sin cambiar su c\xf3digo original."]})}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"ejemplo-b\xe1sico",children:"Ejemplo b\xe1sico"}),(0,a.jsx)(n.p,{children:"En el siguiente ejemplo se crea un decorador que muestra un mensaje antes y despu\xe9s de ejecutar la funci\xf3n principal."}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def decorador(func):\n    def wrapper():\n        print("Antes de ejecutar la funci\xf3n...")\n        func()\n        print("Despu\xe9s de ejecutar la funci\xf3n...")\n    return wrapper\n\n@decorador\ndef saludar():\n    print("\xa1Hola, mundo!")\n\nsaludar()\n'})}),(0,a.jsx)(n.p,{children:"Salida:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Antes de ejecutar la funci\xf3n...\n\xa1Hola, mundo!\nDespu\xe9s de ejecutar la funci\xf3n...\n"})}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"ejemplo-de-funci\xf3n-con-par\xe1metros",children:"Ejemplo de funci\xf3n con par\xe1metros"}),(0,a.jsxs)(n.p,{children:["Para que el decorador funcione con cualquier funci\xf3n (que reciba o no argumentos), usamos ",(0,a.jsx)(n.code,{children:"*args"})," y ",(0,a.jsx)(n.code,{children:"**kwargs"}),"."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def decorador(func):\n    def wrapper(*args, **kwargs):\n        print("Llamando a la funci\xf3n...")\n        resultado = func(*args, **kwargs)  # ejecuta la funci\xf3n original\n        print("Ejecuci\xf3n completada.")\n        return resultado\n    return wrapper\n\n@decorador\ndef sumar(a, b):\n    return a + b\n\nprint(sumar(3, 4))\n'})}),(0,a.jsx)(n.p,{children:"Salida:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Llamando a la funci\xf3n...\nEjecuci\xf3n completada.\n7\n"})}),(0,a.jsxs)(n.p,{children:["\u2705 Ahora el decorador sirve para ",(0,a.jsx)(n.strong,{children:"cualquier funci\xf3n"}),", sin importar el n\xfamero de par\xe1metros."]}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"decoradores-anidados",children:"Decoradores anidados"}),(0,a.jsxs)(n.p,{children:["Puedes aplicar ",(0,a.jsx)(n.strong,{children:"varios decoradores"})," sobre una misma funci\xf3n.\nSe ejecutan de abajo hacia arriba (el m\xe1s cercano a la funci\xf3n es el primero en aplicarse)."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"@decorador1\n@decorador2\ndef mi_funcion():\n    ...\n"})}),(0,a.jsx)(n.hr,{}),(0,a.jsx)(n.h3,{id:"ejemplo-pr\xe1ctico-tiempo-de-ejecuci\xf3n",children:"Ejemplo pr\xe1ctico: tiempo de ejecuci\xf3n"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import time\n\ndef medir_tiempo(func):\n    def wrapper(*args, **kwargs):\n        inicio = time.time()\n        resultado = func(*args, **kwargs)\n        fin = time.time()\n        print(f"Tiempo de ejecuci\xf3n: {fin - inicio:.4f} segundos")\n        return resultado\n    return wrapper\n\n@medir_tiempo\ndef tarea_pesada():\n    suma = 0\n    for i in range(10**6):\n        suma += i\n    return suma\n\ntarea_pesada()\n'})}),(0,a.jsx)(n.p,{children:"Salida:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Tiempo de ejecuci\xf3n: 0.0462 segundos\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>d});var s=r(96540);const a={},o=s.createContext(a);function i(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);