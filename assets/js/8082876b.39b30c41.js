"use strict";(self.webpackChunkpmdm=self.webpackChunkpmdm||[]).push([[3906],{28453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>l});var s=n(96540);const t={},r=s.createContext(t);function i(e){const a=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(r.Provider,{value:a},e.children)}},45149:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"pia_2526/ut2_python_para_ia/estructuras-datos/5-2-tuplas","title":"Tuplas","description":"Las tuplas en Python son colecciones ordenadas e inmutables, usadas para almacenar datos que no deben cambiar","source":"@site/docs/01_pia_2526/ut2_python_para_ia/5-estructuras-datos/5-2-tuplas.md","sourceDirName":"01_pia_2526/ut2_python_para_ia/5-estructuras-datos","slug":"/pia_2526/ut2_python_para_ia/estructuras-datos/5-2-tuplas","permalink":"/DevTacora/docs/pia_2526/ut2_python_para_ia/estructuras-datos/5-2-tuplas","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Tuplas","sidebar_position":2,"description":"Las tuplas en Python son colecciones ordenadas e inmutables, usadas para almacenar datos que no deben cambiar","keywords":["Python","estructuras de datos","tuplas"]},"sidebar":"pia_2526_Sidebar","previous":{"title":"Listas","permalink":"/DevTacora/docs/pia_2526/ut2_python_para_ia/estructuras-datos/5-1-listas"},"next":{"title":"Sets","permalink":"/DevTacora/docs/pia_2526/ut2_python_para_ia/estructuras-datos/5-3-sets"}}');var t=n(74848),r=n(28453);const i={title:"Tuplas",sidebar_position:2,description:"Las tuplas en Python son colecciones ordenadas e inmutables, usadas para almacenar datos que no deben cambiar",keywords:["Python","estructuras de datos","tuplas"]},l=void 0,o={},u=[{value:"Crear una tupla",id:"crear-una-tupla",level:3},{value:"Longitud de una tupla",id:"longitud-de-una-tupla",level:3},{value:"Acceder a elementos de una tupla",id:"acceder-a-elementos-de-una-tupla",level:3},{value:"Slicing en tuplas",id:"slicing-en-tuplas",level:3},{value:"Conversi\xf3n a listas (para modificarlas)",id:"conversi\xf3n-a-listas-para-modificarlas",level:3},{value:"Comprobar si un elemento est\xe1 en una tupla",id:"comprobar-si-un-elemento-est\xe1-en-una-tupla",level:3},{value:"Unir tuplas",id:"unir-tuplas",level:3},{value:"Eliminar tuplas",id:"eliminar-tuplas",level:3}];function c(e){const a={admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)("div",{class:"justify-text",children:[(0,t.jsxs)(a.p,{children:["Las ",(0,t.jsx)(a.strong,{children:"tuplas"})," son colecciones ",(0,t.jsx)(a.strong,{children:"ordenadas e inmutables"}),".\nEsto significa que, una vez creadas, ",(0,t.jsx)(a.strong,{children:"no se pueden modificar"})," (no se pueden a\xf1adir ni eliminar elementos, ni cambiar su valor).\nSe utilizan para representar datos ",(0,t.jsx)(a.strong,{children:"constantes o que no deben alterarse"}),"."]}),(0,t.jsx)(a.admonition,{title:"LAS TUPLAS SON COLECCIONES ORDENADAS",type:"warning",children:(0,t.jsxs)(a.p,{children:["Cuando decimos que ",(0,t.jsx)(a.strong,{children:'las tuplas son "ordenadas"'}),", significa que ",(0,t.jsx)(a.strong,{children:"los elementos mantienen el orden en que fueron insertados"})," y que ese orden no cambia autom\xe1ticamente.\nNo es que se ordenen solas (como en matem\xe1ticas), sino que ",(0,t.jsx)(a.strong,{children:"recuerdan el orden original"}),"."]})}),(0,t.jsx)(a.h3,{id:"crear-una-tupla",children:"Crear una tupla"}),(0,t.jsxs)(a.p,{children:["Se definen con par\xe9ntesis ",(0,t.jsx)(a.code,{children:"()"}),"."]}),(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:'tupla_vacia = tuple()\notra_tupla_vacia = ()\ntupla1 = (1, 2, 3)\ntupla2 = ("Ana", "Luis", "Marta")\nmixta = (1, "Hola", True, 3.5)\n\n# Tambi\xe9n se puede crear sin par\xe9ntesis (tuple packing)\ntupla3 = 1, 2, 3\n'})}),(0,t.jsx)(a.p,{children:"\ud83d\udc49 Para una tupla de un solo elemento hay que poner una coma final:"}),(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"tupla_uno = (5,)   # tupla con un \xfanico elemento\n"})}),(0,t.jsx)(a.h3,{id:"longitud-de-una-tupla",children:"Longitud de una tupla"}),(0,t.jsxs)(a.p,{children:["Se calcula con ",(0,t.jsx)(a.code,{children:"len()"}),"."]}),(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:'nombres = ("Ana", "Luis", "Marta")\nprint(len(nombres))  # 3\n'})}),(0,t.jsx)(a.h3,{id:"acceder-a-elementos-de-una-tupla",children:"Acceder a elementos de una tupla"}),(0,t.jsx)(a.p,{children:"Funciona igual que en listas, con \xedndices positivos y negativos."}),(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"print(nombres[0])   # Ana\nprint(nombres[-1])  # Marta\n"})}),(0,t.jsx)(a.h3,{id:"slicing-en-tuplas",children:"Slicing en tuplas"}),(0,t.jsx)(a.p,{children:"Las tuplas tambi\xe9n admiten slicing."}),(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"print(nombres[0:2])  # ('Ana', 'Luis')\nprint(nombres[:2])   # ('Ana', 'Luis')\nprint(nombres[1:])   # ('Luis', 'Marta')\nprint(nombres[::-1]) # ('Marta', 'Luis', 'Ana')\n"})}),(0,t.jsx)(a.h3,{id:"conversi\xf3n-a-listas-para-modificarlas",children:"Conversi\xf3n a listas (para modificarlas)"}),(0,t.jsxs)(a.p,{children:["Como las tuplas son ",(0,t.jsx)(a.strong,{children:"inmutables"}),", si queremos cambiarlas debemos convertirlas a lista."]}),(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:'colores = ("rojo", "verde", "azul")\nlista_colores = list(colores)\nlista_colores[0] = "amarillo"\ncolores = tuple(lista_colores)\nprint(colores)  # (\'amarillo\', \'verde\', \'azul\')\n'})}),(0,t.jsx)(a.h3,{id:"comprobar-si-un-elemento-est\xe1-en-una-tupla",children:"Comprobar si un elemento est\xe1 en una tupla"}),(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:'frutas = ("manzana", "pera", "uva")\nprint("pera" in frutas)      # True\nprint("pl\xe1tano" not in frutas) # True\n'})}),(0,t.jsx)(a.h3,{id:"unir-tuplas",children:"Unir tuplas"}),(0,t.jsxs)(a.p,{children:["Podemos unir tuplas con el operador ",(0,t.jsx)(a.code,{children:"+"}),"."]}),(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"a = (1, 2, 3)\nb = (4, 5)\nc = a + b\nprint(c)  # (1, 2, 3, 4, 5)\n"})}),(0,t.jsx)(a.h3,{id:"eliminar-tuplas",children:"Eliminar tuplas"}),(0,t.jsxs)(a.p,{children:["No se pueden eliminar elementos individuales de una tupla, pero s\xed ",(0,t.jsx)(a.strong,{children:"borrar la tupla entera"})," con ",(0,t.jsx)(a.code,{children:"del"}),"."]}),(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"tupla = (1, 2, 3)\ndel tupla\n# ahora tupla ya no existe\n"})})]})}function d(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);