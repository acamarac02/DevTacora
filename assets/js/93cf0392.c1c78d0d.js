"use strict";(self.webpackChunkpmdm=self.webpackChunkpmdm||[]).push([[4950],{4815:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"pmdm_2425/ut5_persistencia/firebase/firestore/operaciones-crud","title":"Operaciones CRUD","description":"En este apartado vamos a estudiar la sintaxis de las operaciones CRUD (Crear, Leer, Actualizar y Eliminar) en Firestore utilizando Java. Trabajaremos con un modelo basado en un tabl\xf3n de anuncios, donde los usuarios pueden publicar anuncios con contenido y una fecha.","source":"@site/docs/00_pmdm_2425/ut5_persistencia/4-firebase/2-firestore/2-operaciones-crud.md","sourceDirName":"00_pmdm_2425/ut5_persistencia/4-firebase/2-firestore","slug":"/pmdm_2425/ut5_persistencia/firebase/firestore/operaciones-crud","permalink":"/DevTacora/docs/pmdm_2425/ut5_persistencia/firebase/firestore/operaciones-crud","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Operaciones CRUD","title":"Operaciones CRUD"},"sidebar":"pmdm_2425_Sidebar","previous":{"title":"Configuraci\xf3n de Firestore","permalink":"/DevTacora/docs/pmdm_2425/ut5_persistencia/firebase/firestore/configuracion-android"},"next":{"title":"Lectura en Tiempo Real","permalink":"/DevTacora/docs/pmdm_2425/ut5_persistencia/firebase/firestore/lectura-tiempo-real"}}');var i=o(4848),s=o(8453);const a={sidebar_position:2,sidebar_label:"Operaciones CRUD",title:"Operaciones CRUD"},c=void 0,d={},t=[{value:"\ud83d\udd39 Inicializar Firestore",id:"-inicializar-firestore",level:2},{value:"\ud83d\udd39 Modelo de datos (Clase Java)",id:"-modelo-de-datos-clase-java",level:2},{value:"\ud83d\udd39 Crear (A\xf1adir un nuevo anuncio)",id:"-crear-a\xf1adir-un-nuevo-anuncio",level:2},{value:"\ud83d\udd39 Leer (Obtener anuncios)",id:"-leer-obtener-anuncios",level:2},{value:"\ud83d\udccc Estructura b\xe1sica de las consultas",id:"-estructura-b\xe1sica-de-las-consultas",level:3},{value:"\ud83d\udccc  Obtener un anuncio por ID",id:"--obtener-un-anuncio-por-id",level:3},{value:"\ud83d\udd0d <strong>Explicaci\xf3n</strong>",id:"-explicaci\xf3n",level:4},{value:"\ud83d\udccc Obtener todos los anuncios",id:"-obtener-todos-los-anuncios",level:3},{value:"\ud83d\udd0d Explicaci\xf3n",id:"-explicaci\xf3n-1",level:4},{value:"\ud83d\udccc Filtrado de datos",id:"-filtrado-de-datos",level:3},{value:"<strong>\ud83d\udccc Obtener anuncios de un usuario espec\xedfico</strong>",id:"-obtener-anuncios-de-un-usuario-espec\xedfico",level:4},{value:"\ud83d\udd0d <strong>Explicaci\xf3n</strong>",id:"-explicaci\xf3n-2",level:4},{value:"\ud83d\udccc Obtener anuncios publicados despu\xe9s de una fecha espec\xedfica",id:"-obtener-anuncios-publicados-despu\xe9s-de-una-fecha-espec\xedfica",level:4},{value:"\ud83d\udd0d <strong>Explicaci\xf3n</strong>",id:"-explicaci\xf3n-3",level:4},{value:"\ud83d\udccc Ordenado de datos",id:"-ordenado-de-datos",level:3},{value:"<strong>\ud83d\udccc Ordenar anuncios por fecha (m\xe1s recientes primero)</strong>",id:"-ordenar-anuncios-por-fecha-m\xe1s-recientes-primero",level:4},{value:"\ud83d\udccc Paginaci\xf3n",id:"-paginaci\xf3n",level:3},{value:"<strong>\ud83d\udccc Obtener los primeros 10 anuncios ordenados por fecha, saltando los 5 primeros</strong>",id:"-obtener-los-primeros-10-anuncios-ordenados-por-fecha-saltando-los-5-primeros",level:4},{value:"\ud83d\udd39 Actualizar datos",id:"-actualizar-datos",level:2},{value:"\ud83d\udccc Actualizar campos espec\xedficos",id:"-actualizar-campos-espec\xedficos",level:3},{value:"\ud83d\udccc Actualizar varios campos",id:"-actualizar-varios-campos",level:3},{value:"\ud83d\udd0d <strong>Explicaci\xf3n</strong>",id:"-explicaci\xf3n-4",level:4},{value:"\ud83d\udccc \xbfCu\xe1ndo usar <code>.update()</code> y cu\xe1ndo usar <code>.set()</code>?",id:"-cu\xe1ndo-usar-update-y-cu\xe1ndo-usar-set",level:3},{value:"\ud83d\udd39 Eliminar datos",id:"-eliminar-datos",level:2}];function l(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)("div",{class:"justify-text",children:[(0,i.jsxs)(n.p,{children:["En este apartado vamos a estudiar la sintaxis de las operaciones CRUD (Crear, Leer, Actualizar y Eliminar) en ",(0,i.jsx)(n.strong,{children:"Firestore"})," utilizando ",(0,i.jsx)(n.strong,{children:"Java"}),". Trabajaremos con un modelo basado en un ",(0,i.jsx)(n.strong,{children:"tabl\xf3n de anuncios"}),", donde los usuarios pueden publicar anuncios con contenido y una fecha."]}),(0,i.jsx)(n.hr,{}),(0,i.jsx)(n.h2,{id:"-inicializar-firestore",children:"\ud83d\udd39 Inicializar Firestore"}),(0,i.jsxs)(n.p,{children:["Antes de empezar, aseg\xfarate de ",(0,i.jsx)(n.strong,{children:"inicializar Firestore"})," en tu ",(0,i.jsx)(n.strong,{children:"Activity, Fragment o Repository"})," para poder acceder a la base de datos."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"FirebaseFirestore db = FirebaseFirestore.getInstance();\n"})}),(0,i.jsxs)(n.p,{children:["Esta instancia (",(0,i.jsx)(n.code,{children:"db"}),") nos permitir\xe1 acceder a ",(0,i.jsx)(n.strong,{children:"colecciones y documentos"})," dentro de Firestore."]}),(0,i.jsxs)(n.p,{children:["Si la app debe funcionar sin conexi\xf3n puedes a\xf1adir la configuraci\xf3n para el ",(0,i.jsx)(n.strong,{children:"modo offline"}),":"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"FirebaseFirestoreSettings settings = new FirebaseFirestoreSettings.Builder()\n        .setPersistenceEnabled(true) // Habilita almacenamiento en cach\xe9\n        .build();\ndb.setFirestoreSettings(settings);\n"})}),(0,i.jsx)(n.p,{children:"Esto permite que Firestore almacene datos en cach\xe9 y los sincronice cuando haya conexi\xf3n a Internet."}),(0,i.jsx)(n.h2,{id:"-modelo-de-datos-clase-java",children:"\ud83d\udd39 Modelo de datos (Clase Java)"}),(0,i.jsxs)(n.p,{children:["Creamos la clase ",(0,i.jsx)(n.code,{children:"Anuncio"})," para representar un documento en la colecci\xf3n ",(0,i.jsx)(n.code,{children:"anuncios/"})," en Firestore."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"public class Anuncio {\n    private String id;\n    private String contenido;\n    private long fecha;\n    private String uidAutor;\n\n    // Constructor vac\xedo requerido por Firestore\n    public Anuncio() {}\n\n    public Anuncio(String contenido, long fecha, String uidAutor) {\n        this.contenido = contenido;\n        this.fecha = fecha;\n        this.uidAutor = uidAutor;\n    }\n\n    // Getters y Setters\n}\n"})}),(0,i.jsx)(n.hr,{}),(0,i.jsx)(n.h2,{id:"-crear-a\xf1adir-un-nuevo-anuncio",children:"\ud83d\udd39 Crear (A\xf1adir un nuevo anuncio)"}),(0,i.jsx)(n.p,{children:"Si queremos insertar un anuncio con un ID generado por nosotros:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public void addAnuncio(Anuncio anuncio) {\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n\n    db.collection("anuncios") // Accede a la colecci\xf3n "anuncios"\n        .document(anuncio.getId()) // Se usa un ID personalizado\n        .set(anuncio) // Guarda el objeto en Firestore\n        .addOnSuccessListener(aVoid -> Log.d("Firestore", "Anuncio agregado correctamente")) // Se ejecuta si el anuncio se agreg\xf3 correctamente\n        .addOnFailureListener(e -> Log.e("Firestore", "Error al agregar anuncio", e)); // Se ejecuta si se ha producido un error\n}\n'})}),(0,i.jsxs)(n.p,{children:["Si queremos que Firestore genere el ",(0,i.jsx)(n.strong,{children:"ID autom\xe1ticamente"}),":"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public void addAnuncioAutoId(Anuncio anuncio) {\n    // Generar un nuevo ID para el documento en Firestore\n    String idGenerado = db.collection("anuncios").document().getId();\n\n    // Asignar el ID generado al anuncio antes de guardarlo\n    anuncio.setId(idGenerado);\n\n    // Insertar el anuncio con el ID generado\n    db.collection("anuncios").document(idGenerado)\n        .set(anuncio)\n        .addOnSuccessListener(aVoid -> Log.d("Firestore", "Anuncio agregado con ID: " + idGenerado))\n        .addOnFailureListener(e -> Log.e("Firestore", "Error al agregar anuncio", e));\n}\n'})}),(0,i.jsxs)(n.p,{children:["Una vez que Firestore guarda el anuncio, el ",(0,i.jsx)(n.code,{children:"documentReference"})," contiene el ",(0,i.jsx)(n.strong,{children:"ID generado autom\xe1ticamente"}),", que se puede recuperar con ",(0,i.jsx)(n.code,{children:".getId()"}),"."]}),(0,i.jsx)(n.hr,{}),(0,i.jsx)(n.h2,{id:"-leer-obtener-anuncios",children:"\ud83d\udd39 Leer (Obtener anuncios)"}),(0,i.jsxs)(n.p,{children:["Firestore permite realizar consultas avanzadas para ",(0,i.jsx)(n.strong,{children:"leer, filtrar, ordenar y paginar datos"}),". Estas consultas se ejecutan en ",(0,i.jsx)(n.strong,{children:"segundo plano"}),", evitando bloquear la interfaz de usuario."]}),(0,i.jsx)(n.h3,{id:"-estructura-b\xe1sica-de-las-consultas",children:"\ud83d\udccc Estructura b\xe1sica de las consultas"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Obtener una instancia de ",(0,i.jsx)(n.code,{children:"FirebaseFirestore db"})]}),"\n",(0,i.jsxs)(n.li,{children:["Seleccionar una colecci\xf3n con ",(0,i.jsx)(n.code,{children:'db.collection("nombreColeccion")'})]}),"\n",(0,i.jsxs)(n.li,{children:["(Opcional) Filtrar los documentos con ",(0,i.jsx)(n.code,{children:".whereEqualTo()"}),", ",(0,i.jsx)(n.code,{children:".whereGreaterThan()"}),", etc."]}),"\n",(0,i.jsxs)(n.li,{children:["(Opcional) Ordenar los resultados con ",(0,i.jsx)(n.code,{children:".orderBy()"})]}),"\n",(0,i.jsxs)(n.li,{children:["(Opcional) Limitar o paginar la consulta con ",(0,i.jsx)(n.code,{children:".limit()"})," y ",(0,i.jsx)(n.code,{children:".startAfter()"})]}),"\n",(0,i.jsxs)(n.li,{children:["Ejecutar la consulta con ",(0,i.jsx)(n.code,{children:".get()"})]}),"\n",(0,i.jsxs)(n.li,{children:["Manejar el resultado en ",(0,i.jsx)(n.code,{children:"addOnSuccessListener()"})," y errores en ",(0,i.jsx)(n.code,{children:"addOnFailureListener()"})]}),"\n"]}),(0,i.jsx)(n.h3,{id:"--obtener-un-anuncio-por-id",children:"\ud83d\udccc  Obtener un anuncio por ID"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public void getAnuncioById(String anuncioId) {\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n\n    db.collection("anuncios").document(anuncioId)\n        .get()\n        .addOnSuccessListener(documentSnapshot -> {\n            if (documentSnapshot.exists()) {\n                Anuncio anuncio = documentSnapshot.toObject(Anuncio.class);\n                Log.d("Firestore", "Anuncio encontrado: " + anuncio.getContenido());\n            } else {\n                Log.d("Firestore", "No se encontr\xf3 el anuncio");\n            }\n        })\n        .addOnFailureListener(e -> Log.e("Firestore", "Error al obtener el anuncio", e));\n}\n'})}),(0,i.jsxs)(n.h4,{id:"-explicaci\xf3n",children:["\ud83d\udd0d ",(0,i.jsx)(n.strong,{children:"Explicaci\xf3n"})]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Se obtiene la referencia de Firestore con ",(0,i.jsx)(n.code,{children:"FirebaseFirestore.getInstance()"})]}),"\n",(0,i.jsxs)(n.li,{children:["Accedemos a la colecci\xf3n ",(0,i.jsx)(n.code,{children:'"anuncios"'})]}),"\n",(0,i.jsxs)(n.li,{children:["Buscamos un documento espec\xedfico por su ID (",(0,i.jsx)(n.code,{children:"anuncioId"}),") con ",(0,i.jsx)(n.code,{children:".document(anuncioId).get()"})]}),"\n",(0,i.jsxs)(n.li,{children:["Si el documento existe, convertimos los datos a un objeto ",(0,i.jsx)(n.code,{children:"Anuncio"})," con ",(0,i.jsx)(n.code,{children:".toObject(Anuncio.class)"}),". Observa que este m\xe9todo solo devuelve un anuncio."]}),"\n",(0,i.jsx)(n.li,{children:"Si el documento no existe, se muestra un mensaje en los logs"}),"\n"]}),(0,i.jsx)(n.h3,{id:"-obtener-todos-los-anuncios",children:"\ud83d\udccc Obtener todos los anuncios"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public void getAllAnuncios() {\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n\n    db.collection("anuncios")\n        .get()\n        .addOnSuccessListener(queryDocumentSnapshots -> {\n            for (DocumentSnapshot document : queryDocumentSnapshots) {\n                Anuncio anuncio = document.toObject(Anuncio.class);\n                Log.d("Firestore", "Anuncio: " + anuncio.getContenido());\n            }\n        })\n        .addOnFailureListener(e -> Log.e("Firestore", "Error al obtener los anuncios", e));\n}\n'})}),(0,i.jsx)(n.h4,{id:"-explicaci\xf3n-1",children:"\ud83d\udd0d Explicaci\xf3n"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Consulta todos los documentos de la colecci\xf3n ",(0,i.jsx)(n.code,{children:'"anuncios"'})," con ",(0,i.jsx)(n.code,{children:".get()"})]}),"\n",(0,i.jsxs)(n.li,{children:["Los resultados se devuelven en un ",(0,i.jsx)(n.code,{children:"QuerySnapshot"})]}),"\n",(0,i.jsxs)(n.li,{children:["Se recorren los documentos con un ",(0,i.jsx)(n.code,{children:"for"})," y se convierten en objetos ",(0,i.jsx)(n.code,{children:"Anuncio"})," con ",(0,i.jsx)(n.code,{children:".toObject(Anuncio.class)"})]}),"\n"]}),(0,i.jsx)(n.hr,{}),(0,i.jsx)(n.h3,{id:"-filtrado-de-datos",children:"\ud83d\udccc Filtrado de datos"}),(0,i.jsxs)(n.p,{children:["Firestore permite filtrar documentos con ",(0,i.jsx)(n.strong,{children:"operadores de consulta"})," como:"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:'whereEqualTo("campo", valor)'})})," \u2192 Filtrar por un valor exacto"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:'whereGreaterThan("campo", valor)'})})," \u2192 Filtrar valores mayores a un n\xfamero"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:'whereLessThan("campo", valor)'})})," \u2192 Filtrar valores menores a un n\xfamero"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:'whereArrayContains("campo", valor)'})})," \u2192 Buscar un valor dentro de un array"]}),"\n"]}),(0,i.jsx)(n.h4,{id:"-obtener-anuncios-de-un-usuario-espec\xedfico",children:(0,i.jsx)(n.strong,{children:"\ud83d\udccc Obtener anuncios de un usuario espec\xedfico"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public void getAnunciosByAutor(String uidAutor) {\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n\n    db.collection("anuncios")\n        .whereEqualTo("uidAutor", uidAutor)\n        .get()\n        .addOnSuccessListener(queryDocumentSnapshots -> {\n            for (DocumentSnapshot document : queryDocumentSnapshots) {\n                Anuncio anuncio = document.toObject(Anuncio.class);\n                Log.d("Firestore", "Anuncio de " + uidAutor + ": " + anuncio.getContenido());\n            }\n        })\n        .addOnFailureListener(e -> Log.e("Firestore", "Error al filtrar anuncios", e));\n}\n'})}),(0,i.jsxs)(n.h4,{id:"-explicaci\xf3n-2",children:["\ud83d\udd0d ",(0,i.jsx)(n.strong,{children:"Explicaci\xf3n"})]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Filtra anuncios donde ",(0,i.jsx)(n.code,{children:'"uidAutor"'})," sea igual al ",(0,i.jsx)(n.code,{children:"uidAutor"})," proporcionado"]}),"\n",(0,i.jsx)(n.li,{children:"Solo devuelve los anuncios creados por ese usuario"}),"\n"]}),(0,i.jsx)(n.h4,{id:"-obtener-anuncios-publicados-despu\xe9s-de-una-fecha-espec\xedfica",children:"\ud83d\udccc Obtener anuncios publicados despu\xe9s de una fecha espec\xedfica"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public void getAnunciosDesdeFecha(long fechaMinima) {\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n\n    db.collection("anuncios")\n        .whereGreaterThan("fecha", fechaMinima)\n        .get()\n        .addOnSuccessListener(queryDocumentSnapshots -> {\n            for (DocumentSnapshot document : queryDocumentSnapshots) {\n                Anuncio anuncio = document.toObject(Anuncio.class);\n                Log.d("Firestore", "Anuncio reciente: " + anuncio.getContenido());\n            }\n        })\n        .addOnFailureListener(e -> Log.e("Firestore", "Error en la consulta", e));\n}\n'})}),(0,i.jsxs)(n.h4,{id:"-explicaci\xf3n-3",children:["\ud83d\udd0d ",(0,i.jsx)(n.strong,{children:"Explicaci\xf3n"})]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Filtra anuncios donde ",(0,i.jsx)(n.code,{children:'"fecha"'})," sea mayor que ",(0,i.jsx)(n.code,{children:"fechaMinima"})," usando ",(0,i.jsx)(n.code,{children:".whereGreaterThan()"})]}),"\n"]}),(0,i.jsx)(n.hr,{}),(0,i.jsx)(n.h3,{id:"-ordenado-de-datos",children:"\ud83d\udccc Ordenado de datos"}),(0,i.jsxs)(n.p,{children:["Firestore permite ordenar resultados con ",(0,i.jsx)(n.code,{children:".orderBy()"}),"."]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:'orderBy("campo", Query.Direction.ASCENDING)'})})," \u2192 Orden ascendente"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:'orderBy("campo", Query.Direction.DESCENDING)'})})," \u2192 Orden descendente"]}),"\n"]}),(0,i.jsx)(n.h4,{id:"-ordenar-anuncios-por-fecha-m\xe1s-recientes-primero",children:(0,i.jsx)(n.strong,{children:"\ud83d\udccc Ordenar anuncios por fecha (m\xe1s recientes primero)"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public void getAnunciosOrdenados() {\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n\n    db.collection("anuncios")\n        .orderBy("fecha", Query.Direction.DESCENDING)\n        .get()\n        .addOnSuccessListener(queryDocumentSnapshots -> {\n            for (DocumentSnapshot document : queryDocumentSnapshots) {\n                Anuncio anuncio = document.toObject(Anuncio.class);\n                Log.d("Firestore", "Anuncio: " + anuncio.getContenido() + " - Fecha: " + anuncio.getFecha());\n            }\n        })\n        .addOnFailureListener(e -> Log.e("Firestore", "Error al ordenar los anuncios", e));\n}\n'})}),(0,i.jsx)(n.hr,{}),(0,i.jsx)(n.h3,{id:"-paginaci\xf3n",children:"\ud83d\udccc Paginaci\xf3n"}),(0,i.jsxs)(n.p,{children:["Firestore no admite ",(0,i.jsx)(n.strong,{children:"paginaci\xf3n autom\xe1tica"}),", pero se puede hacer con:"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:".limit(n)"})})," \u2192 Define la cantidad de documentos por p\xe1gina"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:".startAfter(documento)"})})," \u2192 Salta documentos y empieza despu\xe9s de uno en espec\xedfico"]}),"\n"]}),(0,i.jsx)(n.h4,{id:"-obtener-los-primeros-10-anuncios-ordenados-por-fecha-saltando-los-5-primeros",children:(0,i.jsx)(n.strong,{children:"\ud83d\udccc Obtener los primeros 10 anuncios ordenados por fecha, saltando los 5 primeros"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public void getFirstPage() {\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n\n    db.collection("anuncios")\n        .orderBy("fecha", Query.Direction.DESCENDING)\n        .startAfter(5)\n        .limit(10) // Obtiene solo 10 documentos\n        .get()\n        .addOnSuccessListener(queryDocumentSnapshots -> {\n            for (DocumentSnapshot document : queryDocumentSnapshots) {\n                Anuncio anuncio = document.toObject(Anuncio.class);\n                Log.d("Firestore", "Anuncio: " + anuncio.getContenido());\n            }\n        })\n        .addOnFailureListener(e -> Log.e("Firestore", "Error en la consulta paginada", e));\n}\n'})}),(0,i.jsx)(n.hr,{}),(0,i.jsx)(n.h2,{id:"-actualizar-datos",children:"\ud83d\udd39 Actualizar datos"}),(0,i.jsx)(n.h3,{id:"-actualizar-campos-espec\xedficos",children:"\ud83d\udccc Actualizar campos espec\xedficos"}),(0,i.jsx)(n.p,{children:"Si solamente quieres actualizar campos concretos, puedes utilizar el m\xe9todo update especificando como primer par\xe1metro el nombre del campo y como segundo el nuevo valor que se debe almacenar en dicho campo."}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public void updateAnuncioParcial(String anuncioId, String nuevoContenido, long nuevaFecha) {\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n\n    db.collection("anuncios").document(anuncioId)\n        .update("contenido", nuevoContenido, "fecha", nuevaFecha) // Solo actualiza estos dos campos\n        .addOnSuccessListener(aVoid -> Log.d("Firestore", "Anuncio actualizado parcialmente"))\n        .addOnFailureListener(e -> Log.e("Firestore", "Error al actualizar el anuncio", e));\n}\n'})}),(0,i.jsx)(n.h3,{id:"-actualizar-varios-campos",children:"\ud83d\udccc Actualizar varios campos"}),(0,i.jsxs)(n.p,{children:["Si deseas actualizar varios campos tambi\xe9n puedes usar ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:".set(anuncio)"})})," en lugar de ",(0,i.jsx)(n.code,{children:".update()"}),", con la opci\xf3n ",(0,i.jsx)(n.code,{children:"merge(true)"})," para no perder datos existentes. Este m\xe9todo recibe como primer par\xe1metro el objeto completo y como segundo la opci\xf3n de actualizaci\xf3n: ",(0,i.jsx)(n.code,{children:"SetOptions.merge()"}),"."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public void updateAnuncio(Anuncio anuncio) {\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n\n    db.collection("anuncios").document(anuncio.getId())\n        .set(anuncio, SetOptions.merge()) // Actualiza solo los campos existentes\n        .addOnSuccessListener(aVoid -> Log.d("Firestore", "Anuncio actualizado correctamente"))\n        .addOnFailureListener(e -> Log.e("Firestore", "Error al actualizar el anuncio", e));\n}\n'})}),(0,i.jsxs)(n.h4,{id:"-explicaci\xf3n-4",children:["\ud83d\udd0d ",(0,i.jsx)(n.strong,{children:"Explicaci\xf3n"})]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".set(anuncio, SetOptions.merge())"}),"** \u2192 Reemplaza los campos que existen en ",(0,i.jsx)(n.code,{children:"Anuncio"}),", pero **mantiene otros datos del documento sin borrar nada."]}),"\n",(0,i.jsxs)(n.li,{children:["Si no usas ",(0,i.jsx)(n.code,{children:"SetOptions.merge()"}),", Firestore sobrescribir\xe1 todo el documento y eliminar\xe1 cualquier campo que no est\xe9 en ",(0,i.jsx)(n.code,{children:"Anuncio"}),"."]}),"\n"]}),(0,i.jsxs)(n.h3,{id:"-cu\xe1ndo-usar-update-y-cu\xe1ndo-usar-set",children:["\ud83d\udccc \xbfCu\xe1ndo usar ",(0,i.jsx)(n.code,{children:".update()"})," y cu\xe1ndo usar ",(0,i.jsx)(n.code,{children:".set()"}),"?"]}),(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"M\xe9todo"}),(0,i.jsx)(n.th,{children:"\xbfReemplaza todo el documento?"}),(0,i.jsx)(n.th,{children:"\xbfRequiere un objeto completo?"}),(0,i.jsx)(n.th,{children:"\xbfBorra campos no incluidos?"}),(0,i.jsx)(n.th,{children:"Uso recomendado"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:".update()"})})}),(0,i.jsx)(n.td,{children:"\u274c No"}),(0,i.jsx)(n.td,{children:"\u274c No, solo los campos especificados"}),(0,i.jsx)(n.td,{children:"\u274c No"}),(0,i.jsx)(n.td,{children:"Cuando solo necesitas modificar un campo espec\xedfico."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:".set(..., SetOptions.merge())"})})}),(0,i.jsx)(n.td,{children:"\u2705 S\xed (solo los campos existentes)"}),(0,i.jsx)(n.td,{children:"\u2705 S\xed, se pasa un objeto completo"}),(0,i.jsx)(n.td,{children:"\u274c No"}),(0,i.jsx)(n.td,{children:"Cuando quieres actualizar varios campos sin perder datos previos."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:".set()"})," (sin ",(0,i.jsx)(n.code,{children:"merge"}),")"]})}),(0,i.jsx)(n.td,{children:"\u2705 S\xed"}),(0,i.jsx)(n.td,{children:"\u2705 S\xed"}),(0,i.jsx)(n.td,{children:"\u2705 S\xed, borra todo lo que no est\xe9 en el nuevo objeto"}),(0,i.jsx)(n.td,{children:"Cuando quieres sobrescribir completamente el documento."})]})]})]}),(0,i.jsx)(n.hr,{}),(0,i.jsx)(n.h2,{id:"-eliminar-datos",children:"\ud83d\udd39 Eliminar datos"}),(0,i.jsxs)(n.p,{children:["Si quieres eliminar un anuncio concreto, puedes filtrar por el id del anuncio y llamar al m\xe9todo ",(0,i.jsx)(n.code,{children:"delete"}),"."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public void deleteAnuncio(String anuncioId) {\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\n\n    db.collection("anuncios").document(anuncioId)\n        .delete()\n        .addOnSuccessListener(aVoid -> Log.d("Firestore", "Anuncio eliminado correctamente"))\n        .addOnFailureListener(e -> Log.e("Firestore", "Error al eliminar anuncio", e));\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>c});var r=o(6540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);