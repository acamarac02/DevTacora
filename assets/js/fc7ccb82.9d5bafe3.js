"use strict";(self.webpackChunkpmdm=self.webpackChunkpmdm||[]).push([[2361],{724:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/crear-grafo-nav-57c91a1daf9ba8ab77f863478dd91274.png"},811:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/adaptacion-tama\xf1o-379bc37de1916efbc7b0214cc7a94043.png"},27420:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/creacion-fragment-0a5479ea746f2d1546873a5189217077.png"},28453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>o});var i=a(96540);const r={},s=i.createContext(r);function t(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(s.Provider,{value:n},e.children)}},37955:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/ciclo-vida-fragment-d66b4bf2822eedfe1b1c0af62daf02dc.png"},38083:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/ejemplo-grafo-nav-ee63b257681bac5afc70bba9caee7815.png"},42062:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/tipo-navigation-82e7cb97d518efe9712408f72ecff3ab.png"},47105:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/activity_fragment-1ffb111097cbe9c9365fe00de21dfd9a.png"},61549:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/modo-design-122c468baa70e0316061f59141d1c8d0.png"},64534:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/navhostfragment-b124248ae5884a51ff963ebb0ee75839.png"},77296:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/argumentos-nav-f6816fac99f6ac4281f84021888a740f.png"},83245:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>t,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"pmdm_2526/ut3_interfaces_usuario_navegacion/fragments","title":"Fragments","description":"Los fragments permiten crear interfaces modulares y reutilizables en Android, facilitando el dise\xf1o adaptable y la navegaci\xf3n entre secciones de una app.","source":"@site/docs/01_pmdm_2526/ut3_interfaces_usuario_navegacion/1-fragments.md","sourceDirName":"01_pmdm_2526/ut3_interfaces_usuario_navegacion","slug":"/pmdm_2526/ut3_interfaces_usuario_navegacion/fragments","permalink":"/DevTacora/docs/pmdm_2526/ut3_interfaces_usuario_navegacion/fragments","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Fragments","sidebar_position":1,"description":"Los fragments permiten crear interfaces modulares y reutilizables en Android, facilitando el dise\xf1o adaptable y la navegaci\xf3n entre secciones de una app.","keywords":["Android","Fragment","Ciclo de vida","FragmentManager","FragmentTransaction","newInstance"]},"sidebar":"pmdm_2526_Sidebar","previous":{"title":"UT3. Interfaces de usuario y navegaci\xf3n","permalink":"/DevTacora/docs/category/ut3-interfaces-de-usuario-y-navegaci\xf3n"},"next":{"title":"Men\xfas","permalink":"/DevTacora/docs/category/men\xfas"}}');var r=a(74848),s=a(28453);const t={title:"Fragments",sidebar_position:1,description:"Los fragments permiten crear interfaces modulares y reutilizables en Android, facilitando el dise\xf1o adaptable y la navegaci\xf3n entre secciones de una app.",keywords:["Android","Fragment","Ciclo de vida","FragmentManager","FragmentTransaction","newInstance"]},o=void 0,d={},l=[{value:"Ciclo de vida de un Fragment",id:"ciclo-de-vida-de-un-fragment",level:2},{value:"Fases principales del ciclo de vida",id:"fases-principales-del-ciclo-de-vida",level:3},{value:"\ud83e\udde9 1. <code>onAttach(Context context)</code>",id:"-1-onattachcontext-context",level:4},{value:"\u2699\ufe0f 2. <code>onCreate(Bundle savedInstanceState)</code>",id:"\ufe0f-2-oncreatebundle-savedinstancestate",level:4},{value:"\ud83d\uddbc\ufe0f 3. <code>onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</code>",id:"\ufe0f-3-oncreateviewlayoutinflater-inflater-viewgroup-container-bundle-savedinstancestate",level:4},{value:"\ud83e\uddf1 4. <code>onViewCreated(View view, Bundle savedInstanceState)</code>",id:"-4-onviewcreatedview-view-bundle-savedinstancestate",level:4},{value:"\u25b6\ufe0f 5. <code>onStart()</code>",id:"\ufe0f-5-onstart",level:4},{value:"\ud83d\udfe2 6. <code>onResume()</code>",id:"-6-onresume",level:4},{value:"\u23f8\ufe0f 7. <code>onPause()</code>",id:"\ufe0f-7-onpause",level:4},{value:"\ud83d\udd3b 8. <code>onStop()</code>",id:"-8-onstop",level:4},{value:"\ud83d\uddd1\ufe0f 9. <code>onDestroyView()</code>",id:"\ufe0f-9-ondestroyview",level:4},{value:"\ud83d\udc80 10. <code>onDestroy()</code>",id:"-10-ondestroy",level:4},{value:"\ud83d\udeaa 11. <code>onDetach()</code>",id:"-11-ondetach",level:4},{value:"Resumen gr\xe1fico",id:"resumen-gr\xe1fico",level:3},{value:"Relaci\xf3n con la Activity",id:"relaci\xf3n-con-la-activity",level:3},{value:"En resumen",id:"en-resumen",level:3},{value:"Gesti\xf3n de fragments: tradicional vs Android Jetpack",id:"gesti\xf3n-de-fragments-tradicional-vs-android-jetpack",level:2},{value:"Navigation Component",id:"navigation-component",level:2},{value:"Conceptos clave",id:"conceptos-clave",level:3},{value:"Tutorial de uso",id:"tutorial-de-uso",level:3},{value:"Enviar datos entre fragments",id:"enviar-datos-entre-fragments",level:3}];function c(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)("div",{class:"justify-text",children:[(0,r.jsxs)(n.p,{children:["En Android, un ",(0,r.jsx)(n.strong,{children:"Fragment"})," es un componente modular que representa una parte reutilizable de la interfaz de usuario.\nPodemos imaginarlo como una \u201cmini-actividad\u201d que tiene su propio layout, su propio ciclo de vida y su propia l\xf3gica, pero que vive ",(0,r.jsx)(n.strong,{children:"dentro de una Activity"})," o de otro Fragment."]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Activity con fragment",src:a(47105).A+"",width:"670",height:"920"})}),(0,r.jsx)(n.p,{children:"Gracias a los fragments, podemos:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Dividir la interfaz de una app en ",(0,r.jsx)(n.strong,{children:"secciones independientes"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Crear ",(0,r.jsx)(n.strong,{children:"dise\xf1os adaptables"})," para distintos dispositivos (por ejemplo, mostrar lista y detalle a la vez en una tablet)."]}),"\n",(0,r.jsx)(n.li,{children:"Reutilizar fragmentos de interfaz en distintas pantallas."}),"\n"]}),(0,r.jsx)(n.p,{children:"Ejemplo de reutilizaci\xf3n de c\xf3digo mediante fragments:"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Reutilizaci\xf3n codigo - Fragments",src:a(88691).A+"",width:"1774",height:"1100"})}),(0,r.jsx)(n.p,{children:"Ejemplo de adaptaci\xf3n al dise\xf1o seg\xfan el tama\xf1o del dispositivo:"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Adaptaci\xf3n tama\xf1o",src:a(811).A+"",width:"1874",height:"660"})}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h2,{id:"ciclo-de-vida-de-un-fragment",children:"Ciclo de vida de un Fragment"}),(0,r.jsxs)(n.p,{children:["Al igual que las ",(0,r.jsx)(n.strong,{children:"Activities"}),", los ",(0,r.jsx)(n.strong,{children:"Fragments"})," tienen su propio ",(0,r.jsx)(n.strong,{children:"ciclo de vida"}),", controlado por el sistema Android.\nEste ciclo determina qu\xe9 m\xe9todos se ejecutan en cada momento desde que el fragment se crea hasta que se destruye.\nComprenderlo es fundamental para saber ",(0,r.jsx)(n.strong,{children:"d\xf3nde inicializar datos, inflar la interfaz o liberar recursos"}),"."]}),(0,r.jsxs)(n.p,{children:["A diferencia de una Activity, el fragment ",(0,r.jsx)(n.strong,{children:"depende siempre de otra Activity"})," para existir.\nEsto significa que su ciclo de vida est\xe1 ",(0,r.jsx)(n.strong,{children:"vinculado"})," al de la actividad que lo contiene, pero no son id\xe9nticos: un fragment puede ",(0,r.jsx)(n.strong,{children:"sobrevivir parcialmente"})," a los cambios de la actividad (por ejemplo, al rotar la pantalla)."]}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"fases-principales-del-ciclo-de-vida",children:"Fases principales del ciclo de vida"}),(0,r.jsx)(n.p,{children:"El ciclo de vida completo de un fragmento pasa por varias etapas.\nLas m\xe1s importantes y utilizadas en el desarrollo son las siguientes:"}),(0,r.jsxs)(n.h4,{id:"-1-onattachcontext-context",children:["\ud83e\udde9 1. ",(0,r.jsx)(n.code,{children:"onAttach(Context context)"})]}),(0,r.jsxs)(n.p,{children:["Se llama ",(0,r.jsx)(n.strong,{children:"cuando el fragment se asocia por primera vez a su Activity contenedora"}),".\nEn este punto, el fragment ",(0,r.jsx)(n.em,{children:"ya sabe en qu\xe9 Activity vive"}),", por lo que podr\xedas obtener una referencia al contexto si la necesitas."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Override\npublic void onAttach(@NonNull Context context) {\n    super.onAttach(context);\n    Log.d("CICLO", "Fragment adjunto a la Activity");\n}\n'})}),(0,r.jsxs)(n.p,{children:["\ud83d\udcd8 ",(0,r.jsx)(n.strong,{children:"Uso t\xedpico:"})," inicializar recursos que dependen del contexto (por ejemplo, un adaptador o listener)."]}),(0,r.jsx)(n.hr,{}),(0,r.jsxs)(n.h4,{id:"\ufe0f-2-oncreatebundle-savedinstancestate",children:["\u2699\ufe0f 2. ",(0,r.jsx)(n.code,{children:"onCreate(Bundle savedInstanceState)"})]}),(0,r.jsxs)(n.p,{children:["Se ejecuta ",(0,r.jsx)(n.strong,{children:"una sola vez"})," cuando el fragment se crea por primera vez.\nAqu\xed no existe todav\xeda la interfaz visual, por lo que no se debe acceder a los elementos del layout."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"@Override\npublic void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    // Inicializar variables, recuperar argumentos del Bundle, etc.\n}\n"})}),(0,r.jsxs)(n.p,{children:["\ud83d\udcd8 ",(0,r.jsx)(n.strong,{children:"Uso t\xedpico:"})," inicializar variables globales, ViewModels o recuperar argumentos pasados con ",(0,r.jsx)(n.code,{children:"setArguments()"}),"."]}),(0,r.jsx)(n.hr,{}),(0,r.jsxs)(n.h4,{id:"\ufe0f-3-oncreateviewlayoutinflater-inflater-viewgroup-container-bundle-savedinstancestate",children:["\ud83d\uddbc\ufe0f 3. ",(0,r.jsx)(n.code,{children:"onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)"})]}),(0,r.jsxs)(n.p,{children:["Es el m\xe9todo encargado de ",(0,r.jsx)(n.strong,{children:"crear y devolver la vista (layout)"})," del fragmento.\nAqu\xed se infla el archivo XML que define la interfaz."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"@Override\npublic View onCreateView(LayoutInflater inflater, ViewGroup container,\n                         Bundle savedInstanceState) {\n    return inflater.inflate(R.layout.fragment_home, container, false);\n}\n"})}),(0,r.jsxs)(n.p,{children:["\ud83d\udcd8 ",(0,r.jsx)(n.strong,{children:"Uso t\xedpico:"})," inflar la vista, pero ",(0,r.jsx)(n.strong,{children:"no inicializar todav\xeda los componentes"})," (se hace justo despu\xe9s, en ",(0,r.jsx)(n.code,{children:"onViewCreated()"}),")."]}),(0,r.jsx)(n.hr,{}),(0,r.jsxs)(n.h4,{id:"-4-onviewcreatedview-view-bundle-savedinstancestate",children:["\ud83e\uddf1 4. ",(0,r.jsx)(n.code,{children:"onViewCreated(View view, Bundle savedInstanceState)"})]}),(0,r.jsxs)(n.p,{children:["Se llama inmediatamente despu\xe9s de ",(0,r.jsx)(n.code,{children:"onCreateView()"}),".\nEn este momento, la vista ",(0,r.jsx)(n.strong,{children:"ya ha sido creada"}),", por lo que podemos acceder a sus elementos."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Override\npublic void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n    super.onViewCreated(view, savedInstanceState);\n\n    Button btnSaludar = view.findViewById(R.id.btnSaludar);\n    btnSaludar.setOnClickListener(v ->\n        Toast.makeText(getContext(), "Hola desde el Fragment", Toast.LENGTH_SHORT).show()\n    );\n}\n'})}),(0,r.jsxs)(n.p,{children:["\ud83d\udcd8 ",(0,r.jsx)(n.strong,{children:"Uso t\xedpico:"})," acceder a componentes visuales, configurar listeners, adaptar datos a vistas."]}),(0,r.jsx)(n.hr,{}),(0,r.jsxs)(n.h4,{id:"\ufe0f-5-onstart",children:["\u25b6\ufe0f 5. ",(0,r.jsx)(n.code,{children:"onStart()"})]}),(0,r.jsxs)(n.p,{children:["Se ejecuta ",(0,r.jsx)(n.strong,{children:"justo antes de que el fragment sea visible para el usuario"})," (aunque todav\xeda no est\xe1 interactuando con \xe9l).\nEquivale al ",(0,r.jsx)(n.code,{children:"onStart()"})," de las Activities."]}),(0,r.jsxs)(n.p,{children:["\ud83d\udcd8 ",(0,r.jsx)(n.strong,{children:"Uso t\xedpico:"})," preparar elementos que se deben mostrar en pantalla, iniciar animaciones o procesos visuales."]}),(0,r.jsx)(n.hr,{}),(0,r.jsxs)(n.h4,{id:"-6-onresume",children:["\ud83d\udfe2 6. ",(0,r.jsx)(n.code,{children:"onResume()"})]}),(0,r.jsxs)(n.p,{children:["Indica que el fragment ya est\xe1 ",(0,r.jsx)(n.strong,{children:"visible y activo"}),".\nEn este punto el usuario puede interactuar con \xe9l."]}),(0,r.jsxs)(n.p,{children:["\ud83d\udcd8 ",(0,r.jsx)(n.strong,{children:"Uso t\xedpico:"})," reanudar operaciones que estaban pausadas (por ejemplo, la reproducci\xf3n de un v\xeddeo o la escucha de sensores)."]}),(0,r.jsx)(n.hr,{}),(0,r.jsxs)(n.h4,{id:"\ufe0f-7-onpause",children:["\u23f8\ufe0f 7. ",(0,r.jsx)(n.code,{children:"onPause()"})]}),(0,r.jsxs)(n.p,{children:["Se ejecuta cuando el fragment ",(0,r.jsx)(n.strong,{children:"deja de estar en primer plano"})," (por ejemplo, cuando aparece otro fragment encima)."]}),(0,r.jsxs)(n.p,{children:["\ud83d\udcd8 ",(0,r.jsx)(n.strong,{children:"Uso t\xedpico:"})," pausar animaciones, detener escuchas o guardar cambios temporales."]}),(0,r.jsx)(n.hr,{}),(0,r.jsxs)(n.h4,{id:"-8-onstop",children:["\ud83d\udd3b 8. ",(0,r.jsx)(n.code,{children:"onStop()"})]}),(0,r.jsxs)(n.p,{children:["El fragment ya ",(0,r.jsx)(n.strong,{children:"no es visible"}),", aunque todav\xeda est\xe1 en memoria.\nEs un buen momento para liberar recursos pesados que no se necesitan mientras no se muestra la interfaz."]}),(0,r.jsx)(n.hr,{}),(0,r.jsxs)(n.h4,{id:"\ufe0f-9-ondestroyview",children:["\ud83d\uddd1\ufe0f 9. ",(0,r.jsx)(n.code,{children:"onDestroyView()"})]}),(0,r.jsxs)(n.p,{children:["Se ejecuta cuando la ",(0,r.jsx)(n.strong,{children:"vista del fragment se destruye"}),", pero el objeto ",(0,r.jsx)(n.code,{children:"Fragment"})," a\xfan sigue existiendo.\nEsto ocurre, por ejemplo, cuando se reemplaza el fragment por otro.\nSi usas ",(0,r.jsx)(n.strong,{children:"Data Binding"}),", aqu\xed es donde debes poner ",(0,r.jsx)(n.code,{children:"binding = null"})," para evitar fugas de memoria."]}),(0,r.jsx)(n.hr,{}),(0,r.jsxs)(n.h4,{id:"-10-ondestroy",children:["\ud83d\udc80 10. ",(0,r.jsx)(n.code,{children:"onDestroy()"})]}),(0,r.jsx)(n.p,{children:"El fragment est\xe1 a punto de destruirse completamente.\nAqu\xed deber\xedas liberar todos los recursos restantes o hilos que hayas iniciado."}),(0,r.jsx)(n.hr,{}),(0,r.jsxs)(n.h4,{id:"-11-ondetach",children:["\ud83d\udeaa 11. ",(0,r.jsx)(n.code,{children:"onDetach()"})]}),(0,r.jsxs)(n.p,{children:["El fragment ",(0,r.jsx)(n.strong,{children:"se ha separado definitivamente de su Activity contenedora"}),".\nDespu\xe9s de este punto, ya no se puede acceder al contexto de la Activity."]}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"resumen-gr\xe1fico",children:"Resumen gr\xe1fico"}),(0,r.jsx)(n.p,{children:"El ciclo de vida puede representarse as\xed:"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Ciclo vida fragment",src:a(37955).A+"",width:"821",height:"1004"})}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"relaci\xf3n-con-la-activity",children:"Relaci\xf3n con la Activity"}),(0,r.jsxs)(n.p,{children:["Cuando una Activity se crea, ",(0,r.jsx)(n.strong,{children:"tambi\xe9n se crean sus fragments asociados"}),".\nSin embargo, si la Activity se destruye temporalmente (por ejemplo, por un cambio de orientaci\xf3n), el sistema puede ",(0,r.jsx)(n.strong,{children:"recrear el fragment autom\xe1ticamente"}),", restaurando su estado a partir del ",(0,r.jsx)(n.code,{children:"Bundle"})," guardado."]}),(0,r.jsx)(n.p,{children:"Por eso es importante:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"No guardar referencias directas a la Activity (pueden quedar obsoletas)."}),"\n",(0,r.jsxs)(n.li,{children:["Usar ",(0,r.jsx)(n.code,{children:"getContext()"})," o ",(0,r.jsx)(n.code,{children:"requireActivity()"})," solo cuando sea necesario."]}),"\n",(0,r.jsxs)(n.li,{children:["Manejar correctamente los datos persistentes con ",(0,r.jsx)(n.code,{children:"ViewModel"})," o ",(0,r.jsx)(n.code,{children:"onSaveInstanceState()"}),"."]}),"\n"]}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"en-resumen",children:"En resumen"}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Fase"}),(0,r.jsx)(n.th,{children:"Descripci\xf3n"}),(0,r.jsx)(n.th,{children:"Cu\xe1ndo usarla"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onAttach()"})}),(0,r.jsx)(n.td,{children:"El fragment se asocia a la Activity"}),(0,r.jsx)(n.td,{children:"Obtener contexto o listeners"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onCreate()"})}),(0,r.jsx)(n.td,{children:"Inicializaci\xf3n l\xf3gica, sin vista"}),(0,r.jsx)(n.td,{children:"Cargar datos o ViewModels"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onCreateView()"})}),(0,r.jsx)(n.td,{children:"Inflar el layout XML"}),(0,r.jsx)(n.td,{children:"Crear la vista"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onViewCreated()"})}),(0,r.jsx)(n.td,{children:"Vista ya disponible"}),(0,r.jsx)(n.td,{children:"Configurar componentes visuales"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onStart()"})}),(0,r.jsx)(n.td,{children:"Fragment visible"}),(0,r.jsx)(n.td,{children:"Preparar UI"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onResume()"})}),(0,r.jsx)(n.td,{children:"Fragment activo"}),(0,r.jsx)(n.td,{children:"Interacci\xf3n del usuario"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onPause()"})}),(0,r.jsx)(n.td,{children:"Fragment parcialmente oculto"}),(0,r.jsx)(n.td,{children:"Guardar estado, pausar tareas"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onStop()"})}),(0,r.jsx)(n.td,{children:"Fragment no visible"}),(0,r.jsx)(n.td,{children:"Liberar recursos"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onDestroyView()"})}),(0,r.jsx)(n.td,{children:"Destruye la vista"}),(0,r.jsx)(n.td,{children:"Evitar fugas de memoria"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onDestroy()"})}),(0,r.jsx)(n.td,{children:"Destruye el fragment"}),(0,r.jsx)(n.td,{children:"Cierre total"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onDetach()"})}),(0,r.jsx)(n.td,{children:"Se separa de la Activity"}),(0,r.jsx)(n.td,{children:"Limpieza final"})]})]})]}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h2,{id:"gesti\xf3n-de-fragments-tradicional-vs-android-jetpack",children:"Gesti\xf3n de fragments: tradicional vs Android Jetpack"}),(0,r.jsxs)(n.p,{children:["Hoy en d\xeda, no gestionamos los ",(0,r.jsx)(n.em,{children:"Fragments"})," directamente (a\xf1adi\xe9ndolos o reemplaz\xe1ndolos \u201ca mano\u201d), sino que utilizamos el ",(0,r.jsx)(n.strong,{children:"Navigation Component"})," de Android Jetpack, que ",(0,r.jsx)(n.strong,{children:"automatiza y simplifica todo ese proceso"}),"."]}),(0,r.jsxs)(n.p,{children:["Antes, cuando quer\xedamos mostrar un nuevo fragmento en pantalla, hab\xeda que hacerlo ",(0,r.jsx)(n.strong,{children:"manualmente"})," mediante el uso de ",(0,r.jsx)(n.code,{children:"FragmentManager"})," y ",(0,r.jsx)(n.code,{children:"FragmentTransaction"}),".\nEsto implicaba escribir bastante c\xf3digo repetitivo y, sobre todo, estar muy pendiente de la ",(0,r.jsx)(n.strong,{children:"pila de retroceso (back stack)"})," y del ",(0,r.jsx)(n.strong,{children:"ciclo de vida"})," de cada fragment."]}),(0,r.jsxs)(n.p,{children:["Por ejemplo, si ten\xedamos una Activity con un contenedor para fragments (",(0,r.jsx)(n.code,{children:"FragmentContainerView"}),"), y quer\xedamos reemplazar un fragment por otro, el c\xf3digo t\xedpico era algo como esto:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"Fragment nuevoFragment = new DetalleFragment();\n\nFragmentManager fm = getSupportFragmentManager();\nFragmentTransaction ft = fm.beginTransaction();\n\n// Reemplazamos el fragment actual por el nuevo\nft.replace(R.id.contenedorFragmentos, nuevoFragment);\n\n// A\xf1adimos la transacci\xf3n al back stack para poder volver atr\xe1s\nft.addToBackStack(null);\n\n// Confirmamos el cambio\nft.commit();\n"})}),(0,r.jsxs)(n.p,{children:["Y si adem\xe1s quer\xedamos ",(0,r.jsx)(n.strong,{children:"pasar datos"})," al nuevo fragment, ten\xedamos que usar un ",(0,r.jsx)(n.code,{children:"Bundle"})," manualmente:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'Bundle args = new Bundle();\nargs.putString("nombreUsuario", "Alicia");\nnuevoFragment.setArguments(args);\n'})}),(0,r.jsxs)(n.p,{children:["En el fragmento de destino hab\xeda que ",(0,r.jsx)(n.strong,{children:"recuperar los datos"})," en el m\xe9todo ",(0,r.jsx)(n.code,{children:"onCreate()"}),":"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Override\npublic void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    if (getArguments() != null) {\n        String nombre = getArguments().getString("nombreUsuario");\n    }\n}\n'})}),(0,r.jsxs)(n.p,{children:["Todo esto funcionaba, pero presentaba varios ",(0,r.jsx)(n.strong,{children:"problemas pr\xe1cticos"}),":"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Hab\xeda que ",(0,r.jsx)(n.strong,{children:"gestionar manualmente"})," las transacciones, lo que era propenso a errores."]}),"\n",(0,r.jsxs)(n.li,{children:["El control de la ",(0,r.jsx)(n.strong,{children:"pila de retroceso"})," pod\xeda volverse complejo (por ejemplo, al pulsar \u201cAtr\xe1s\u201d)."]}),"\n",(0,r.jsxs)(n.li,{children:["El paso de datos no era ",(0,r.jsx)(n.strong,{children:"seguro en tiempo de compilaci\xf3n"})," (si te equivocabas de clave en el ",(0,r.jsx)(n.code,{children:"Bundle"}),", el fallo aparec\xeda en ejecuci\xf3n)."]}),"\n",(0,r.jsxs)(n.li,{children:["Al girar el dispositivo o reanudar la app, algunos fragments pod\xedan ",(0,r.jsx)(n.strong,{children:"recrearse incorrectamente"})," si no se manejaba bien su estado."]}),"\n"]}),(0,r.jsxs)(n.p,{children:["Para evitar estos inconvenientes, Google introdujo el ",(0,r.jsx)(n.strong,{children:"Navigation Component"})," dentro de la suite ",(0,r.jsx)(n.strong,{children:"Android Jetpack"}),".\nCon \xe9l, toda la navegaci\xf3n se define desde un \xfanico archivo XML (el ",(0,r.jsx)(n.em,{children:"Navigation Graph"}),"), que describe los destinos (fragments, actividades, di\xe1logos...) y las acciones que los conectan."]}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h2,{id:"navigation-component",children:"Navigation Component"}),(0,r.jsxs)(n.p,{children:["El ",(0,r.jsx)(n.strong,{children:"Navigation Component"})," es parte de la librer\xeda ",(0,r.jsx)(n.strong,{children:"Android Jetpack"})," y su objetivo es ",(0,r.jsx)(n.strong,{children:"simplificar la navegaci\xf3n entre pantallas"})," (Fragments y Activities) dentro de una aplicaci\xf3n."]}),(0,r.jsxs)(n.p,{children:["Gestiona por nosotros la pila de retroceso (\u201cback stack\u201d), el paso de argumentos, las transiciones animadas y la integraci\xf3n con la barra de navegaci\xf3n, todo desde un \xfanico punto centralizado: el ",(0,r.jsx)(n.strong,{children:"Navigation Graph"}),"."]}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"conceptos-clave",children:"Conceptos clave"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)(n.strong,{children:["Navigation Graph (",(0,r.jsx)(n.code,{children:"nav_graph.xml"}),")"]}),"\nEs un recurso XML que define los destinos de la app (Fragments, Activities, etc.) y las acciones que conectan esos destinos.\nAct\xfaa como un mapa visual de toda la navegaci\xf3n."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Navigation graph",src:a(95038).A+"",width:"532",height:"412"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"NavHostFragment"}),"\nEs el contenedor que carga en la Activity los fragments definidos en el grafo.\nCuando el usuario navega, el ",(0,r.jsx)(n.code,{children:"NavHostFragment"})," cambia autom\xe1ticamente el fragment visible."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"NavHostFragment",src:a(64534).A+"",width:"326",height:"374"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"NavController"}),"\nEs el objeto que controla la navegaci\xf3n entre destinos.\nCuando se pulsa un bot\xf3n o una opci\xf3n del men\xfa, el ",(0,r.jsx)(n.code,{children:"NavController"})," decide qu\xe9 fragment debe mostrarse en el ",(0,r.jsx)(n.code,{children:"NavHostFragment"}),"."]}),"\n"]}),"\n"]}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"tutorial-de-uso",children:"Tutorial de uso"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["A\xf1adir dependencias en ",(0,r.jsx)(n.code,{children:"build.gradle"})," (nivel m\xf3dulo):"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gradle",children:' val navVersion = "2.9.5"\n implementation("androidx.navigation:navigation-fragment:$navVersion")\n implementation("androidx.navigation:navigation-ui:$navVersion")\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Puedes consultar la \xfaltima versi\xf3n en la ",(0,r.jsx)(n.a,{href:"https://developer.android.com/guide/navigation",children:"documentaci\xf3n oficial de Navigation"}),"."]}),"\n",(0,r.jsx)(n.admonition,{title:"Sincroniza el proyecto",type:"warning",children:(0,r.jsx)(n.p,{children:"Despu\xe9s de modificar el archivo build.gradle, haz clic en \u201cSync Now\u201d en la barra superior de Android Studio.\nSi no sincronizas, las nuevas dependencias no se descargar\xe1n y el c\xf3digo marcar\xe1 errores."})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Crear el grafo de navegaci\xf3n:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Click derecho sobre la carpeta ra\xedz del proyecto \u2192 ",(0,r.jsx)(n.strong,{children:"New > Android Resource File"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Crear grafo navegaci\xf3n",src:a(724).A+"",width:"703",height:"198"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Asigna el tipo \u201cNavigation\u201d y un nombre como ",(0,r.jsx)(n.code,{children:"nav_graph.xml"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Tipo Navigation",src:a(42062).A+"",width:"942",height:"621"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Definici\xf3n del grafo de navegaci\xf3n"})}),"\n",(0,r.jsxs)(n.p,{children:["Una vez creado el grafo, puedes abrirlo en ",(0,r.jsx)(n.strong,{children:"modo Design"})," desde Android Studio.\nAll\xed ver\xe1s un lienzo donde puedes:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"A\xf1adir destinos"})," (cada destino suele ser un fragment)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Crear conexiones (acciones)"})," entre destinos arrastrando una flecha."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Definir el destino inicial (Start Destination)"})," marcando el icono de la casa."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Modo design",src:a(61549).A+"",width:"444",height:"620"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Creaci\xf3n de los fragments"})}),"\n",(0,r.jsxs)(n.p,{children:["A partir del men\xfa anterior, vamos a crear los fragments pulsando sobre ",(0,r.jsx)(n.code,{children:"Create new destination"}),". El tipo de fragment a elegir es ",(0,r.jsx)(n.strong,{children:"Fragment (Blank)"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Creaci\xf3n fragment",src:a(27420).A+"",width:"1456",height:"981"})}),"\n",(0,r.jsxs)(n.admonition,{title:"\ud83d\udca1 NOMENCLATURA DE FRAGMENTS Y LAYOUTS",type:"tip",children:[(0,r.jsx)(n.p,{children:"Sigue la misma convenci\xf3n que utilizamos para las Activities:"}),(0,r.jsxs)(n.p,{children:["El nombre de la clase del fragmento se escribe en CamelCase y termina con la palabra Fragment.",(0,r.jsx)(n.br,{}),"\n","\ud83d\udc49 Ejemplo: DetalleFragment, LoginFragment, ListaUsuariosFragment."]}),(0,r.jsxs)(n.p,{children:["El nombre del layout asociado va todo en min\xfasculas y separado por guiones bajos, empezando por la palabra fragment_.",(0,r.jsx)(n.br,{}),"\n","\ud83d\udc49 Ejemplo: fragment_detalle.xml, fragment_login.xml, fragment_lista_usuarios.xml."]}),(0,r.jsx)(n.p,{children:"Mantener esta nomenclatura ayuda a identificar r\xe1pidamente qu\xe9 layout pertenece a qu\xe9 fragment y a mantener el proyecto ordenado."})]}),"\n",(0,r.jsx)(n.p,{children:"Puedes observar que se han creado ambos ficheros en las carpetas correspondientes:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Directorio fragments",src:a(88739).A+"",width:"460",height:"621"})}),"\n",(0,r.jsx)(n.p,{children:"Modificamos el layout a nuestro gusto y dejamos limpio el c\xf3digo del Fragment. De momento, solo necesitaremos estos m\xe9todos:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="PinkFragment.java"',children:"public class PinkFragment extends Fragment {\n\n    // Binding del fragment\n    FragmentPinkBinding binding;\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                         Bundle savedInstanceState) {\n        // Inicializamos el binding inflando el layout\n        binding = FragmentPinkBinding.inflate(inflater, container, false);\n\n        // Devolvemos la vista ra\xedz del binding\n        return binding.getRoot();\n    }\n\n    @Override\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n    \n        // Aqu\xed podemos acceder a las vistas (botones, textos, etc.)\n    }\n}\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"A\xf1adir las relaciones entre los fragments"})}),"\n",(0,r.jsx)(n.p,{children:"Las relaciones indican a qu\xe9 fragments se puede navegar desde cada fragmento. Se establecen uniendo los fragmentos mediantes flechas."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Ejemplo grafo navegaci\xf3n",src:a(38083).A+"",width:"934",height:"525"})}),"\n",(0,r.jsx)(n.p,{children:"Adem\xe1s, el icono de la casa sobre el PinkFragment indica que este es el destino que se mostrar\xe1 en primer lugar: el Start\nDestination. Puedes cambiar en cualquier momento el Start Destination seleccionando un destino y clicando en el icono de la casa de la barra."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"A\xf1adir el NavHostFragment al layout principal"})}),"\n",(0,r.jsxs)(n.p,{children:["En el layout de la ",(0,r.jsx)(n.code,{children:"MainActivity"})," (por ejemplo ",(0,r.jsx)(n.code,{children:"activity_main.xml"}),"), se incluye el contenedor donde se mostrar\xe1n los fragments:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",metastring:'title="activity_main.xml"',children:'<?xml version="1.0" encoding="utf-8"?>\n<androidx.constraintlayout.widget.ConstraintLayout\n    xmlns:android="http://schemas.android.com/apk/res/android"\n    xmlns:app="http://schemas.android.com/apk/res-auto"\n    xmlns:tools="http://schemas.android.com/tools"\n    android:layout_width="match_parent"\n    android:layout_height="match_parent"\n    tools:context=".MainActivity">\n\n    \x3c!-- Contenedor de fragments --\x3e\n    <androidx.fragment.app.FragmentContainerView\n        android:id="@+id/nav_host_fragment"\n        android:name="androidx.navigation.fragment.NavHostFragment"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        app:defaultNavHost="true"\n        app:navGraph="@navigation/nav_graph"\n        app:layout_constraintTop_toBottomOf="parent"\n        app:layout_constraintBottom_toTopOf="parent"\n        app:layout_constraintStart_toStartOf="parent"\n        app:layout_constraintEnd_toEndOf="parent" />\n\n</androidx.constraintlayout.widget.ConstraintLayout>\n'})}),"\n",(0,r.jsx)(n.p,{children:"Esto le indica a Android que ese contenedor debe mostrar los fragments definidos en el grafo."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Navegaci\xf3n entre fragments"})}),"\n",(0,r.jsxs)(n.p,{children:["El ",(0,r.jsx)(n.code,{children:"NavController"})," es el encargado de cambiar de un fragment a otro seg\xfan las acciones definidas en el grafo."]}),"\n",(0,r.jsx)(n.p,{children:"En el PinkFragment, al pulsar el bot\xf3n, vamos a navegar al siguiente destino con el siguiente c\xf3digo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="PinkFragment.java"',children:"@Override\n public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n     super.onViewCreated(view, savedInstanceState);\n\n     binding.btnIrFragment2.setOnClickListener(new View.OnClickListener() {\n         @Override\n         public void onClick(View v) {\n             NavController navController = Navigation.findNavController(view);\n             navController.navigate(R.id.action_pinkFragment_to_greenFragment);\n         }\n     });\n }\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Este c\xf3digo utiliza la acci\xf3n definida en el grafo (",(0,r.jsx)(n.code,{children:"action_pinkFragment_to_greenFragment"}),") para cambiar autom\xe1ticamente de pantalla."]}),"\n",(0,r.jsx)(n.p,{children:"El sistema se encarga de todo:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Cargar el nuevo fragment en el ",(0,r.jsx)(n.code,{children:"NavHostFragment"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"A\xf1adirlo a la pila de retroceso."}),"\n",(0,r.jsx)(n.li,{children:"Manejar correctamente el bot\xf3n \u201cAtr\xe1s\u201d."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"El nombre de la acci\xf3n a utilizar podemos verlo en el grafo de navegaci\xf3n, campo action:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",metastring:'title="nav_graph"',children:'<?xml version="1.0" encoding="utf-8"?>\n<navigation\n    xmlns:android="http://schemas.android.com/apk/res/android"\n    xmlns:app="http://schemas.android.com/apk/res-auto"\n    xmlns:tools="http://schemas.android.com/tools"\n    android:id="@+id/nav_graph"\n    app:startDestination="@id/pinkFragment">\n\n    <fragment\n        android:id="@+id/pinkFragment"\n        android:name="es.iesagora.demofragments.PinkFragment"\n        android:label="fragment_pink"\n        tools:layout="@layout/fragment_pink">\n\n        <action\n            android:id="@+id/action_pinkFragment_to_greenFragment"\n            app:destination="@id/greenFragment" />\n    </fragment>\n\n    <fragment\n        android:id="@+id/greenFragment"\n        android:name="es.iesagora.demofragments.GreenFragment"\n        android:label="fragment_green"\n        tools:layout="@layout/fragment_green">\n\n        <action\n            android:id="@+id/action_greenFragment_to_blueFragment"\n            app:destination="@id/blueFragment" />\n    </fragment>\n\n    <fragment\n        android:id="@+id/blueFragment"\n        android:name="es.iesagora.demofragments.BlueFragment"\n        android:label="fragment_blue"\n        tools:layout="@layout/fragment_blue">\n\n        <action\n            android:id="@+id/action_blueFragment_to_pinkFragment"\n            app:destination="@id/pinkFragment" />\n    </fragment>\n\n</navigation>\n'})}),"\n"]}),"\n"]}),(0,r.jsx)(n.hr,{}),(0,r.jsx)(n.h3,{id:"enviar-datos-entre-fragments",children:"Enviar datos entre fragments"}),(0,r.jsxs)(n.p,{children:["A veces necesitamos ",(0,r.jsx)(n.strong,{children:"enviar informaci\xf3n de un fragment a otro"}),", por ejemplo, pasar el nombre de un usuario o un identificador.\nExisten varias formas de hacerlo, pero la m\xe1s simple es mediante un ",(0,r.jsxs)(n.strong,{children:["objeto ",(0,r.jsx)(n.code,{children:"Bundle"})]}),", que permite enviar pares clave\u2013valor entre fragments."]}),(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u26a0\ufe0f Esta forma es la tradicional (sin Safe Args).\nM\xe1s adelante aprender\xe1s a hacerlo con ",(0,r.jsx)(n.strong,{children:"ViewModel"}),", que es la opci\xf3n m\xe1s moderna y recomendada."]}),"\n"]}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Declara los argumentos en el grafo:"})}),"\n",(0,r.jsxs)(n.p,{children:["Puedes hacerlo de la vista de dise\xf1o, pulsando sobre ",(0,r.jsx)(n.code,{children:"+"})," en el apartado ",(0,r.jsx)(n.code,{children:"Arguments"}),":"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Argumentos grafo navegaci\xf3n",src:a(77296).A+"",width:"1334",height:"656"})}),"\n",(0,r.jsx)(n.p,{children:"Tambi\xe9n puedes hacerlo directamente desde el XML:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:' <fragment\n     android:id="@+id/pinkFragment"\n     android:name="es.iesagora.demofragments.PinkFragment"\n     android:label="fragment_pink"\n     tools:layout="@layout/fragment_pink" >\n     <action\n         android:id="@+id/action_pinkFragment_to_greenFragment"\n         app:destination="@id/greenFragment" />\n     <argument\n         android:name="userName"\n         app:argType="string" />\n </fragment>\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Env\xeda los datos desde el fragment de origen:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="PinkFragment.java"',children:' @Override\n public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n     super.onViewCreated(view, savedInstanceState);\n     navController = Navigation.findNavController(view);\n\n     binding.btnIrFragment2.setOnClickListener(new View.OnClickListener() {\n         @Override\n         public void onClick(View v) {\n             Bundle args = new Bundle();\n             args.putString("userName", "Alicia");\n             navController.navigate(R.id.action_pinkFragment_to_greenFragment, args);\n         }\n     });\n }\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Recupera los datos en el destino:"})}),"\n",(0,r.jsxs)(n.p,{children:["Estos datos puedes recuperarlos, por ejemplo, en el m\xe9todo ",(0,r.jsx)(n.code,{children:"onCreate()"})," del fragmento de destino:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="GreenFragment.java"',children:'public class GreenFragment extends Fragment {\n\n    private FragmentGreenBinding binding;\n    private String nombre;\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        // Siempre comprobamos si no es null para evitar errores de acceso\n        if (getArguments() != null) {\n            nombre = getArguments().getString("userName");\n        }\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        binding = FragmentGreenBinding.inflate(inflater, container, false);\n        return binding.getRoot();\n    }\n}\n'})}),"\n"]}),"\n"]}),(0,r.jsxs)(n.admonition,{title:"USO DE VIEWMODEL PARA COMPARTIR DATOS",type:"info",children:[(0,r.jsxs)(n.p,{children:["El m\xe9todo con ",(0,r.jsx)(n.code,{children:"Bundle"})," es \xfatil para ejemplos sencillos, pero no es la forma m\xe1s robusta ni moderna.\nCuando varios fragments necesitan ",(0,r.jsx)(n.strong,{children:"compartir datos"})," (por ejemplo, comunicarse entre ellos o mantener el estado al rotar la pantalla), lo ideal es utilizar un ",(0,r.jsx)(n.strong,{children:"ViewModel compartido"}),"."]}),(0,r.jsxs)(n.p,{children:["Ventajas de usar ",(0,r.jsx)(n.code,{children:"ViewModel"}),":"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Evita depender de ",(0,r.jsx)(n.code,{children:"Bundles"})," y claves de texto."]}),"\n",(0,r.jsx)(n.li,{children:"Mantiene los datos incluso si el fragment se destruye y recrea."}),"\n",(0,r.jsxs)(n.li,{children:["Se integra f\xe1cilmente con la arquitectura ",(0,r.jsx)(n.strong,{children:"MVVM"})," y con ",(0,r.jsx)(n.strong,{children:"LiveData"}),"."]}),"\n"]}),(0,r.jsx)(n.p,{children:"Aprenderemos esta t\xe9cnica en pr\xf3ximos apartados."})]}),(0,r.jsx)(n.admonition,{title:"ACTIVIDAD DE SEGUIMIENTO 4",type:"info",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Realiza la Actividad de Seguimiento 4: Proceso Onboarding."})})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},88691:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/reutilizacion-codigo-10c08e97e1ceee86fa5f807ae46b1b89.png"},88739:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/directorio-fragments-866fb2b735cc4a9ed07832c0d0b96d80.png"},95038:(e,n,a)=>{a.d(n,{A:()=>i});const i=a.p+"assets/images/navigation-graph-14068656c370337e2314e6df3addd3d9.png"}}]);